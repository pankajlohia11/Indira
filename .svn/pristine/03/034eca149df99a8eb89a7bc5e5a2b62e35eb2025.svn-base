app1.controller("AC_POCtrl", function ($scope, $http, $window, $compile) {
    GetPrivilages();
    GetPOList();
    GetSupplier();
    GetCurrency();
    GetProducts();
    ORGBind();
    function GetPrivilages() {
       
        var getprivilages = $http.get("/ET_Purchase_PO/GetPrivilages");
        getprivilages.then(function (privilage1) {
            debugger;
            var privilage = JSON.parse(privilage1.data);
            $scope.Iscreate = privilage[0].IS_ADD;
            $scope.Isedit = privilage[0].IS_EDIT;
            $scope.Isdelete = privilage[0].IS_DELETE;
            $scope.Isrestore = privilage[0].IS_FULLCONTROL;
            $scope.Isview = privilage[0].IS_VIEW;
        }, function () {
            alert('Privilages Not Found');
        }
        );
    }
    function GetPOList() {
        var getstorelist = $http.get("/ET_Purchase_PO/GetPOList",
            {
                params: { delete: false }
            });
        getstorelist.then(function (storelist) {
            var res = JSON.parse(storelist.data);
            $scope.storelist = res;
        }, function () {
            alert("No Data Found");
        });
    }
    
    function GetStoreRestoreList() {
        debugger;
        var getporestorelist = $http.get("/ET_Purchase_PO/GetPOList",
            {
                params: { delete: true }
            });
        getporestorelist.then(function (porestorelist) {
            var res = JSON.parse(porestorelist.data);
            $scope.porestorelist = res;
        }, function () {
            alert("No Data Found");
        });
    }
    $scope.CurrencyChange = function () {
    }
    $scope.SupplierChange = function () {
        debugger;
        var id = $scope.Po_Supplierkey;
        $http({
            method: 'POST',
            url: '/ET_Purchase_PO/BindSupplierAddress',
            dataType: 'json',
            data: {
                id: id,
            },
        }).success(function (data) {
            debugger;  
            $scope.Po_SupplierAddress = x[1] + ', ' + x[2] + ', ' + x[3] + ', ' + x[4]; 
        });
    }
    function ORGBind() {
        debugger;
        if ($scope.selectedorg != "0") {
            var GetTargetList = $http.get("/ET_Purchase_PO/BindRow_Employees");
            GetTargetList.then(function (org) {

                if (org.data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (org.data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    debugger;
                    $scope.targetbind = $scope.selectedorg;
                    $scope.singlerowdata = org.data;
                    var temp = $compile(org.data)($scope);
                    angular.element(document.getElementById('divTarget')).append(temp);
                }
            }, function () {
                alert('Data not found');
            });
        }
        else {
            $scope.targetbind = $scope.selectedorg;
            $('#divTarget').html("");
        }
    }
    function GetCurrency() {
        debugger;
        var getcurrencylist = $http.get("/ET_Purchase_PO/GetCurrency");
        getcurrencylist.then(function (currencylist) {
            var res = JSON.parse(currencylist.data);
            $scope.currencylist = res; 
        }, function () {
            alert("Currency Not Found");
        });
    }
    function GetSupplier() {
        debugger;
        var getsupplierlist = $http.get("/ET_Purchase_PO/GetSupplier");
        getsupplierlist.then(function (supplierslist) {
            var res = JSON.parse(supplierslist.data);
            $scope.supplierslist = res;
        }, function () {
            alert("Supplier Not Found");
        });
    }
   
    function GetProducts() {
        debugger;
        var getproductlist = $http.get("/ET_Purchase_PO/GetProducts");
        getproductlist.then(function (productlist) {
            var res = JSON.parse(productlist.data);
            $scope.products = res;
        }, function () {
            alert('Data not found');
        });
    }

    $scope.addnewrowchild = function (a) {
        var e = a.target;
        var tr = $("#storedetailsbody").find("tr");
        var txt = "";
        for (var i = 0; i < tr.length; i++) {
            var td = tr[i].cells;
            var date = $(td[0]).find("input").val();
            var Qty = $(td[1]).find("input").val();
             
            if (date == "") {
                message = " Select Date at row " + (i + 1);
                toastr["error"](message, "Notification");
                txt = "asd";
            }
            else if (Qty == "") {
                message = "Enter the Opening Qty at row " + (i + 1);
                toastr["error"](message, "Notification");
                txt = "asd";
            } 
        }
        if (txt == "") {
            var Rowhtml = "<tr><td> <div class='input-group datepicker w-360' style='width: 100%'><input type = 'text' id = 'txtDSDate' name = 'txtDSDate' class='form-control'/><span class='input-group-addon'><span class='fa fa-calendar'></span></span></div ></td><td><input type='number' id='txtQuantity' class='form-control' /></td><td><a style='padding: 5px;' ng-click='addnewrowchild($event)'><i class='fa fa-plus'></i></a><a style='padding: 5px;color:red' ng-click='deleterowchild($event)'><i class='fa fa-trash'></i></a></td></tr>";
            var temp = $compile(Rowhtml)($scope);
            angular.element(document.getElementById('storedetailsbody')).append(temp);
        }
    }
    $scope.addnewrow = function (a) {
        debugger;
        var e = a.target;
        var tr = $("#divTarget").find(".hideandshow");
        var txt = "";
        //for (var i = 0; i < tr.length; i++) {
        //    var td = tr[i].cells;
        //    var Product = $(td[0]).find("select").val();
        //    var Qty = $(td[3]).find("input").val();
        //    var price = $(td[4]).find("input").val();
        //    if (Product == "") {
        //        message = "Select Product at row " + (i + 1);
        //        toastr["error"](message, "Notification");
        //        txt = "asd";
        //    }
        //    else if (Qty == "") {
        //        message = "Enter the Opening Qty at row " + (i + 1);
        //        toastr["error"](message, "Notification");
        //        txt = "asd";
        //    }
        //    else if (price == "") {
        //        message = "Enter the Opening Rate at row " + (i + 1);
        //        toastr["error"](message, "Notification");
        //        txt = "asd";
        //    }
        //}
        if (txt == "") {
            var sdf = "_" + (tr.length - 1);
            var Rowhtml = $scope.singlerowdata.replace("collapseExample_0", "collapseExample_" + tr.length);
            Rowhtml = Rowhtml.replace("collapseExample_0", "collapseExample_" + tr.length);
            Rowhtml = Rowhtml.replace("collapseExample_0", "collapseExample_" + tr.length);
            var temp = $compile(Rowhtml)($scope);
            angular.element(document.getElementById('divTarget')).append(temp);
        }
    }
    $scope.deleterowchild = function (a) {
        var e = a.target;
        var len = $("#storedetailsbody").find("tr").length;
        if (len != 1) {
            $(e).parent().parent().parent().fadeOut(300, function () { $(this).remove(); });
        }
        else {
            message = "Atleast one Product required";
            toastr["error"](message, "Notification");
        }
    }
    $scope.deleterow = function (a) {
        var e = a.target;
        var len = $("#podetailsbody").find("tr").length;
        if (len != 1) {
            $(e).parent().parent().parent().fadeOut(300, function () { $(this).remove(); });
        }
        else {
            message = "Atleast one Product required";
            toastr["error"](message, "Notification");
        }
    }

    $scope.showRecords = function () {
        debugger;
        $("#advancedusage").dataTable().fnDestroy();
        GetPOList();
        $("#div_View").css("display", "block");
        $("#div_Restore").css("display", "none");
        $("#div_Edit").css("display", "none");
    }
    $scope.restoreRecords = function () {
        debugger;
        $("#advancedusageRestore").dataTable().fnDestroy();
        GetStoreRestoreList();
        $("#div_View").css("display", "none");
        $("#div_Restore").css("display", "block");
        $("#div_Edit").css("display", "none");
    }
    $scope.createnew = function () {
        if ($scope.Iscreate) {
            debugger;
            $("#formSubmit").attr('disabled', "disabled");
            $("#div_View").css("display", "none");
            $("#div_Edit").css("display", "block");
            $scope.submittext = "Submit";
            $scope.createedit = "Create";
            $scope.PP_ID = "0";
            $scope.PO_Code = "";
            $scope.Po_CurrencyKey = "";
            $scope.Po_PaymentTerms = "";
            $scope.Po_Supplierkey = "";
            $scope.txtSupplierAddress = "";
            $scope.txtShippingAddress = "";
            $scope.txttotalamount = "";
            $scope.txtSpecialInstruction = "";
            $scope.txtTermsandConditions = "";
            $scope.Po_DeliveryShedule = false;
            $scope.txtDeliveryDate = "";
            $("#Po_Supplierkey").val("").trigger("chosen:updated");
            $("#drpcurrency").val("").trigger("chosen:updated");
            $("#chkDeliveryShedule").prop('checked', false);
            var Rowhtml = "<tr><td><select class='form-control' id='drpProduct' onchange='ProductChange(this);'><option value=''>-Select-</option><option ng-repeat='product in products' value='{{ product.P_ID }}'>{{ product.P_ArticleNo }}</option ></select></td><td><input type='text' id='txtProductName' class='form-control' readonly='readonly' /></td><td><input type='text' id='txtUOM' class='form-control' readonly='readonly'/></td><td><input type='number' id='txtPackage' class='form-control'/></td><td><input type='number' id='txtQuantity' class='form-control' /></td><td><input type='number' id='txttax' class='form-control' /></td><td><input type='number' id='txttotalAmount' class='form-control' readonly='readonly'/></td> <td><a style='padding: 5px;' ng-click='addnewrow($event)'><i class='fa fa-plus'></i></a><a style='padding: 5px;color:red' ng-click='deleterow($event)'><i class='fa fa-trash'></i></a><a style='padding: 5px;color:green' title='Delivery Schedule' ng-click='deleterow($event)'><i class='fa fa-truck'></i></a></td></tr>";
            var temp = $compile(Rowhtml)($scope);
            angular.element(document.getElementById('podetailsbody')).html("");
            angular.element(document.getElementById('podetailsbody')).append(temp);
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }
    $scope.DeliveyScheduleChange = function () {
        debugger;
        if ($("#chkDeliveryShedule").prop('checked')) {
            $("#txtDeliveryDate").val("");
            $("#txtDeliveryDate").attr('disabled', "disabled");
           
            var tr = $("#tblSalesTarget").find("tr");
            var txt = "";

            $(".hideandshow").show();
            var Rowhtml = "<tr><td> <div class='input-group datepicker w-360' style='width: 100%'><input type = 'text' id = 'txtDSDate' name = 'txtDSDate' class='form-control'/><span class='input-group-addon'><span class='fa fa-calendar'></span></span></div ></td><td><input type='number' id='txtQuantity' class='form-control' /></td><td><a style='padding: 5px;' ng-click='addnewrowchild($event)'><i class='fa fa-plus'></i></a><a style='padding: 5px;color:red' ng-click='deleterowchild($event)'><i class='fa fa-trash'></i></a></td></tr>";
            var temp = $compile(Rowhtml)($scope);
            angular.element(document.getElementById('storedetailsbody')).html("");
            angular.element(document.getElementById('storedetailsbody')).append(temp);
        
        }
        else
        {
            $("#txtDeliveryDate").removeAttr('disabled');
            var tr = $("#tblSalesTarget").find("tr");
            var txt = "";
            $(".hideandshow").hide();
        }
    }
    function validate() {
        var tr = $("#podetailsbody").find("tr");
        var txt = "";
        for (i = 0; i < tr.length; i++) {
            var td = $(tr[i]).find("td");
            var product = $(td[0]).find("select").val();
            var qty = $(td[3]).find("input").val();
            var rate = $(td[4]).find("input").val();
            if (product == "") {
                message = "Enter Product Name at row:" + (i + 1);
                toastr["error"](message, "Notification");
                return "";
            } else if (qty == "") {
                message = "Enter Opening Qty at row:" + (i + 1);
                toastr["error"](message, "Notification");
                return "";
            }
            else if (rate == "") {
                message = "Enter Opening Rate at row:" + (i + 1);
                toastr["error"](message, "Notification");
                return "";
            }
            else {
                txt = txt + $(td[0]).find("select").val() + ",";
                txt = txt + $(td[0]).find("select option:selected").text() + ",";
                txt = txt + $(td[1]).find("input").val() + ",";
                txt = txt + $(td[2]).find("input").val() + ",";
                txt = txt + $(td[3]).find("input").val() + ",";
                txt = txt + $(td[4]).find("input").val() + "|";
            }
        }
        return txt;
    }
    $scope.SubmitClick = function () {
        debugger;
        var txt = validate();
        debugger;
        if (txt != "") {
            var post = $http({
                method: "POST",
                url: "/ET_Purchase_PO/ET_Master_PO_Add",
                dataType: 'json',
                data: {
                    PP_ID: $scope.PP_ID,
                    PO_Code: $scope.PO_Code,
                    Po_CurrencyKey: $scope.Po_CurrencyKey,
                    Po_PaymentTerms: $scope.Po_PaymentTerms,
                    Po_Supplierkey: $scope.Po_Supplierkey,
                    Po_SupplierAddress: $scope.Po_SupplierAddress,
                    Po_ShippingAddress: $scope.Po_ShippingAddress,
                    Po_TotalAmount: $scope.Po_TotalAmount,
                    Po_SpecialInstruction: $scope.Po_SpecialInstruction,
                    Po_TermsandConditions: $scope.Po_TermsandConditions,
                    Po_DeliveryShedule: $scope.Po_DeliveryShedule,
                    PODetails: txt
                },
                headers: { "Content-Type": "application/json" }
            });

            post.success(function (data, status) {

                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else if (data.indexOf("Validation") > -1) {
                    toastr["error"](data, "Notification");
                }
                else if (data == "Success") {
                    if ($scope.PP_ID == 0) {
                        message = 'Record Inserted Successfully.';
                        toastr["success"](message, "Notification");
                    }
                    else {
                        message = 'Record Updated Successfully.';
                        toastr["success"](message, "Notification");
                    }
                    $scope.createnew();
                }
                else {
                    message = "Failed to do this operation.";
                    toastr["error"](message, "Notification");
                }
            });

            post.error(function (data, status) {
                $window.alert(data.Message);
            });
        }

    }
    $scope.editRecords = function (a) {
        a = parseInt(a);
        if ($scope.Isedit) {
            var post = $http({
                method: "POST",
                url: "/ET_Purchase_PO/ET_Master_PO_Update_GetbyID",
                dataType: 'json',
                data: {
                    id: a
                },
                headers: { "Content-Type": "application/json" }
            });
            post.success(function (data, status) {
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    var POByID = JSON.parse(data);
                    $("#formSubmit").removeAttr('disabled');
                    $("#div_View").css("display", "none");
                    $("#div_Edit").css("display", "block");
                    $scope.submittext = "Update";
                    $scope.createedit = "Edit";
                    $("#span_tabtext").html("Edit");
                    debugger;
                    $scope.PP_ID = POByID.PP_ID;
                    $scope.PO_Code = POByID.PO_Code;
                    $scope.Po_CurrencyKey = POByID.Po_CurrencyKey;
                    $scope.Po_PaymentTerms = POByID.Po_PaymentTerms;
                    $scope.Po_Supplierkey = POByID.Po_Supplierkey;
                    $scope.Po_SupplierAddress = POByID.Po_SupplierAddress;
                    $scope.Po_ShippingAddress = POByID.Po_ShippingAddress;
                    $scope.Po_TotalAmount = POByID.Po_TotalAmount;
                    $scope.Po_SpecialInstruction = POByID.Po_SpecialInstruction;
                    $scope.Po_TermsandConditions = POByID.Po_TermsandConditions; 
                    Po_DeliveryShedule: $("#chkDeliveryShedule").prop('checked'),
                    $("#drpcurrency").val(POByID.Po_CurrencyKey).trigger("chosen:updated");
                    $("#drpsuppliername").val(POByID.Po_Supplierkey).trigger("chosen:updated"); 
                    PODetails(POByID.PP_ID);
                }
            });

            post.error(function (data, status) {
                $window.alert(data.Message);
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }
    function PODetails(e) {
        var id = e;
        $http({
            method: 'POST',
            url: '/ET_Purchase_PO/ET_Master_PO_Details_Load',
            data: {
                id: id,
            },
        }).success(function (data) {
            debugger;
            var enquirydata = JSON.parse(data)
            var i = enquirydata.length;
            var j = 0;
            angular.element(document.getElementById('podetailsbody')).html("");
            while (i != 0) {
                var Rowhtml = "<tr><td><select class='form-control' id='drpProduct' onchange='ProductChange(this);'><option value=''>-Select-</option><option ng-repeat='product in products' value='{{ product.P_ID }}'>{{ product.P_ArticleNo }}</option ></select></td><td><input type='text' id='txtProductName' class='form-control' readonly='readonly' /></td><td><input type='text' id='txtUOM' class='form-control' readonly='readonly'/></td><td><input type='number' id='txtPackage' class='form-control'/></td><td><input type='number' id='txtQuantity' class='form-control' /></td><td><input type='number' id='txttax' class='form-control' /></td><td><input type='number' id='txttotalAmount' class='form-control' readonly='readonly'/></td><td><a style='padding: 5px;' ng-click='addnewrow($event)'><i class='fa fa-plus'></i></a><a style='padding: 5px;color:red' ng-click='deleterow($event)'><i class='fa fa-trash'></i></a><a style='padding: 5px;color:green' title='Delivery Schedule' ng-click='deleterow($event)'><i class='fa fa-truck'></i></a></td> </tr>";
                var temp = $compile(Rowhtml)($scope);
                angular.element(document.getElementById('podetailsbody')).append(temp);
                i--;
                j++;
            }
            $scope.enquirydata1 = enquirydata;
        });
    }
    $scope.Restoredeleterecords = function (a, $event, b) {

        var res = false;
        if (b)
            res = $scope.Isdelete;
        else
            res = $scope.Isrestore
        if (res) {
            var post = $http({
                method: "POST",
                url: "/ET_Purchase_PO/ET_Master_PO_RestoreDelete",
                dataType: 'json',
                data: {
                    id: a,
                    type: b
                },
                headers: { "Content-Type": "application/json" }
            });
            post.success(function (data, status) {
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    if (data == "Success") {
                        $($event.target.parentElement.parentElement.parentElement).fadeOut(800, function () { $(this).remove(); });
                        if (b) {
                            message = "Record Deleted Successfully.";
                        }
                        else {
                            message = "Record Restored Successfully.";
                        }

                        toastr["success"](message, "Notification");
                    }
                    else {
                        message = "Failed to do this operation.";
                        toastr["error"](message, "Notification");
                    }
                }
            });
            post.error(function (data, status) {
                $window.alert(data.Message);
            });
        }
    }
    $scope.ViewRecords = function (a) {
        a = parseInt(a);
        if ($scope.Isview) {
            var post = $http({
                method: "POST",
                url: "/ET_Purchase_PO/ET_Master_PO_View",
                dataType: 'html',
                data: {
                    id: a
                },
                headers: { "Content-Type": "application/json" }
            });
            post.success(function (data, status) {
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    $('#viewpopup').html(data);
                    $("#btnviewpopup").trigger("click");
                    //var privilage = JSON.parse(data);
                    //$scope.txtMaterialCodeView = privilage[0].MATERIAL_CODE;
                    //$scope.txtMaterialnameView = privilage[0].MATERIAL_NAME;
                    //$scope.txtDescriptionView = privilage[0].MATERIAL_DESCRIPTION;
                    //if (privilage[0].COTTON_PER == 1)
                    //    $scope.chkCottonView = true;
                    //else
                    //    $scope.chkCottonView = false;
                    //$rootScope.$emit("CallParentMethod", { a: $scope.txtMaterialCodeView, b: $scope.txtMaterialnameView, c: $scope.txtDescriptionView, d: $scope.chkCottonView });

                }
            });

            post.error(function (data, status) {
                $window.alert(data.Message);
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }
    $scope.$watch("currencylist", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () { $("#drpcurrency").val($scope.Po_CurrencyKey).trigger("chosen:updated"); }, 100);
        }
    });
    $scope.$watch("supplierslist", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () { $("#drpsuppliername").val($scope.Po_Supplierkey).trigger("chosen:updated"); }, 100);
        }
    });
    
    $scope.$watch("storelist", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () {
                dynamicDataTable('#advancedusage', '#tableTools', '#colVis');
            }, 5);
        }
    });
    $scope.$watch("porestorelist", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () {
                dynamicDataTable('#advancedusageRestore', '#tableToolsRestore', '#colVisRestore');
            }, 5);
        }
    });
    $scope.$watch("enquirydata1", function (value) {
        var val = value || null;
        if (val) {
            var enquirydata = $scope.enquirydata1;
            setTimeout(function () {
                debugger;
                var tr = $("#podetailsbody").find("tr");
                for (var i = 0; i < tr.length; i++) {
                    var td = tr[i].cells;
                    $(td[0]).find("select").val(enquirydata[i].productid);
                    $(td[1]).find("input").val(enquirydata[i].name);
                    $(td[2]).find("input").val(enquirydata[i].uom);
                    $(td[3]).find("input").val(enquirydata[i].quantity);
                    $(td[4]).find("input").val(enquirydata[i].unitprice);
                    $(td[5]).find("input").val(enquirydata[i].tax);
                    $(td[6]).find("input").val(enquirydata[i].totalAmount);
                    $(td[7]).find("input").val(enquirydata[i].deliverydate);
                }
            }, 1000);
        }
    });

});