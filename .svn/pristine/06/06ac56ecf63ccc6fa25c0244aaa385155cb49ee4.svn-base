app1.controller("AC_POCtrl", function ($scope, $http, $window, $compile) {
    GetPrivilages();
    GetPOList();
    GetSupplier();
    GetCurrency();
    GetStoreMaster();
    ORGBind();
    function GetPrivilages() {
        $scope.isschedule = false;
        var getprivilages = $http.get("/ET_Purchase_PO/GetPrivilages");
        getprivilages.then(function (privilage1) {

            var privilage = JSON.parse(privilage1.data);
            $scope.Iscreate = privilage[0].IS_ADD;
            $scope.Isedit = privilage[0].IS_EDIT;
            $scope.Isdelete = privilage[0].IS_DELETE;
            $scope.Isrestore = privilage[0].IS_FULLCONTROL;
            $scope.Isview = privilage[0].IS_VIEW;
        }, function () {
            alert('Privilages Not Found');
        }
        );
    }
    function PaymentTerms() {
        $http({
            method: 'POST',
            url: '/ET_Purchase_PO/Payment_terms_dropdown',
            data: { id: $scope.PP_ID }
        }).success(function (data) {
            var payment = JSON.parse(data)
            $scope.paymenttermlist = payment;
        });
    }
    function GetPOList() {
        var getstorelist = $http.get("/ET_Purchase_PO/GetPOList",
            {
                params: { delete: false }
            });
        getstorelist.then(function (storelist) {
            var res = JSON.parse(storelist.data);
            $scope.storelist = res;
        }, function () {
            alert("No Data Found");
        });
    }

    function GetStoreRestoreList() {

        var getporestorelist = $http.get("/ET_Purchase_PO/GetPOList",
            {
                params: { delete: true }
            });
        getporestorelist.then(function (porestorelist) {
            var res = JSON.parse(porestorelist.data);
            $scope.porestorelist = res;
        }, function () {
            alert("No Data Found");
        });
    }
    $scope.CurrencyChange = function () {
    }
    $scope.SupplierChange = function () {

        var id = $scope.Po_Supplierkey;
        $http({
            method: 'POST',
            url: '/ET_Purchase_PO/BindSupplierAddress',
            dataType: 'json',
            data: {
                id: id,
            },
        }).success(function (data) {

            $scope.Po_SupplierAddress = data;
        });
        GetProducts();

    }
    function ORGBind() {

        var GetTargetList = $http.get("/ET_Purchase_PO/BindRow_Employees");
        GetTargetList.then(function (org) {

            if (org.data == "Session Expired") {
                $window.location.href = '/ET_Login/ET_SessionExpire';
            }
            else if (org.data.indexOf("ERR") > -1) {
                $("#spanErrMessage1").html(data);
                $("#spanErrMessage2").html(data);
                if ($("#exceptionmessage").length)
                    $("#exceptionmessage").trigger("click");
            }
            else {

                $scope.singlerowdata = org.data;
                var temp = $compile(org.data)($scope);
                angular.element(document.getElementById('divTarget')).append(temp);
            }
        }, function () {
            alert('Data not found');
        });
    }
    function GetCurrency() {

        var getcurrencylist = $http.get("/ET_Purchase_PO/GetCurrency");
        getcurrencylist.then(function (currencylist) {
            var res = JSON.parse(currencylist.data);
            $scope.currencylist = res;
           // $scope.Po_CurrencyKey = "";
        }, function () {
            alert("Currency Not Found");
        });
    }
    function OrderTypeChanged() {
        if ($scope.PO_Type == 2) {

            $("#OrderReference").show();
            $("#ShippingOnetoMany").hide();
            $("#ShippingOnetoone").show();
            $scope.GI_StoreCode = "0";
            $scope.isDisabled = true;
            $("#drpsuppliername").attr('disabled', "disabled");
        }
        if ($scope.PO_Type == 3) {
            $("#OrderReference").hide();
            $("#ShippingOnetoMany").show();
            $scope.Po_ShippingAddress = "";
            $("#ShippingOnetoone").hide();
            $scope.isDisabled = false;
            $("#drpsuppliername").removeAttr("disabled");
        }
    }
    $scope.OrderTypeChange = function () {
        if ($scope.PO_Type == 2) {
            $("#OrderReference").show();
            $("#ShippingOnetoMany").hide();
            $("#ShippingOnetoone").show();
            $scope.GI_StoreCode = "0";
            $scope.PO_OrderReference = "0";
            $("#drpOrderReference").val("0").trigger("chosen:updated");
            $scope.isDisabled = true;
            $("#drpsuppliername").attr('disabled', "disabled");
            $scope.Po_Supplierkey = "";
            $("#drpsuppliername").val("").trigger("chosen:updated");
            $scope.Po_TotalAmount = "0";
            $("#txtSupplierAddress").val("");
            $("#txttotalamount").val("");
            $scope.ProductData1 = null;
            var temp = $compile($scope.singlerowdata)($scope);
            angular.element(document.getElementById('divTarget')).html("");
            angular.element(document.getElementById('divTarget')).append(temp);
        }
        if ($scope.PO_Type == 3) {
            $("#OrderReference").hide();
            $("#ShippingOnetoMany").show();
            $("#ShippingOnetoone").hide();
            $scope.Po_ShippingAddress = "";
            $scope.PO_OrderReference = "0";
            $("#drpOrderReference").val("0").trigger("chosen:updated");
            $scope.isDisabled = false;
            $("#drpsuppliername").removeAttr("disabled");
            $scope.Po_Supplierkey = "";
            $("#drpsuppliername").val("").trigger("chosen:updated");
            $scope.Po_TotalAmount = "0";
            $("#txtSupplierAddress").val("");
            $("#txttotalamount").val("");
            $scope.products = "";
            $scope.ProductData1 = null;
            var temp = $compile($scope.singlerowdata)($scope);
            angular.element(document.getElementById('divTarget')).html("");
            angular.element(document.getElementById('divTarget')).append(temp);
        }
    }
    $scope.OrderReferenceChange = function () {
        if ($scope.PO_OrderReference != 0) {
            var id = $scope.PO_OrderReference;
            $http({
                method: 'POST',
                url: '/ET_Purchase_PO/GetSupplierPriceList',
                data: {
                    id: id,
                },
            }).success(function (data) {
                if (data.indexOf("Validation") > -1) {
                    message = data;
                    toastr["error"](message, "Notification");
                    $scope.PO_OrderReference = "0";
                    $("#drpOrderReference").val("0").trigger("chosen:updated");
                    $scope.products = "";
                    $scope.ProductData1 = null;

                    var temp = $compile($scope.singlerowdata)($scope);
                    angular.element(document.getElementById('divTarget')).html("");
                    angular.element(document.getElementById('divTarget')).append(temp);
                }
                else {
                    if (data.indexOf("Some of the products Supplier") > -1) {
                        message = "For Some Products, Supplier Price is greater than Order Price. Please verify and proceed";
                        toastr["error"](message, "Notification");
                    }
                    
                    angular.element(document.getElementById('divTarget')).html("");
                    var temp = $compile(data)($scope);
                    angular.element(document.getElementById('divTarget')).append(temp);
                    GetSuppliers(id);
                    $scope.ProductData1 = data;
                }
            });
        }
        else {
            $scope.products = "";
            $scope.ProductData1 = null;
            var temp = $compile($scope.singlerowdata)($scope);
            angular.element(document.getElementById('divTarget')).html("");
            angular.element(document.getElementById('divTarget')).append(temp);
        }

    }
    $scope.$watch("ProductData1", function (value) {

        var val = value || null;
        if (val) {
            var ProductData1 = $scope.ProductData1;
            setTimeout(function () {

                var tbl = $("#divTarget").children();
                var txt = "";
                var total = 0;
                for (var i = 0; i < tbl.length;) {

                    var td1 = tbl[i].children;

                    td1[0].children[0].setAttribute("disabled", "disabled")
                    td1[3].children[0].setAttribute("disabled", "disabled")
                    var val = td1[3].children[0];

                    $(td1[3].children[0]).val(parseFloat($(td1[3].children[0]).val()).toLocaleString("es-ES", { minimumFractionDigits: 3 }))
                    $(td1[4].children[0]).val(parseFloat($(td1[4].children[0]).val()).toLocaleString("es-ES", { minimumFractionDigits: 3 }))
                    var qty = parseFloat($(td1[3].children[0]).val());
                    var unitprice = parseFloat($(td1[4].children[0]).val());
                    var amt = qty * unitprice;
                    total = total + amt;

                    $(td1[5].children[0]).val(amt.toLocaleString("es-ES", { minimumFractionDigits: 3 }))
                    $(td1[0].children[0]).val($(td1[0].children[0]).attr("ng-init"));
                    i = i + 2;
                }
                $("#txttotalamount").val(total.toLocaleString("es-ES", { minimumFractionDigits: 3 }));
            }, 1000);
        }
    });
    function GetSuppliers(id) {
        var getproductlist = $http.get("/ET_Purchase_PO/GetSuppliersByOrder",
            {
                params: { id: id }
            });
        getproductlist.then(function (productlist) {


            var res = JSON.parse(productlist.data);
            $scope.Po_Supplierkey = res[0];
            $("#drpsuppliername").val($scope.Po_Supplierkey).trigger("chosen:updated");

            $scope.SupplierChange();
        }, function () {
            alert('Data not found');
        });
    }
    function GetSupplier() {

        var getsupplierlist = $http.get("/ET_Purchase_PO/GetSupplier");
        getsupplierlist.then(function (supplierslist) {

            var res = JSON.parse(supplierslist.data);
            $scope.supplierslist = res;
            $scope.Po_Supplierkey = "";
        }, function () {
            alert("Supplier Not Found");
        });
    }
    function GetStoreMaster() {
        debugger;
        var getstorelists = $http.get("/ET_Purchase_PO/GetStorelist");
        getstorelists.then(function (storelist) {
            debugger;
            var res = JSON.parse(storelist.data);
            $scope.storelists = res;
        }, function () {
            alert("Supplier Not Found");
        });
    }
    function GetProducts() {

        var getproductlist = $http.get("/ET_Purchase_PO/GetProducts",
            {
                params: { id: $scope.Po_Supplierkey }
            });
        getproductlist.then(function (productlist) {
            var res = JSON.parse(productlist.data);
            $scope.products = res;
        }, function () {
            alert('Data not found');
        });
    }

    $scope.addnewrowchild = function (a, b) {

        var e = a.target;
        var tr = $("#tblPOSchedule" + b)[0].children[1].children;
        var txt = "";
        for (var i = 0; i < tr.length; i++) {
            var td = tr[i].cells;
            var date = $(td[0]).find("input").val();
            var Qty = $(td[1]).find("input").val();

            if (date == "") {
                message = " Select Date at row " + (i + 1);
                toastr["error"](message, "Notification");
                txt = "asd";
            }
            else if (Qty == "") {
                message = "Enter the Opening Qty at row " + (i + 1);
                toastr["error"](message, "Notification");
                txt = "asd";
            }
        }
        if (txt == "") {
            var Rowhtml = ("<tr><td><div class='input-group datepicker w-360' style='width: 100%' data-format='DD-MM - YYYY'><input type='text' id='txtDSDate' name='txtDSDate'  class='form-control' onfocus='getdatepic();' /><span class='input-group-addon'><span class='fa fa-calendar' onclick='getdatepic()'></span></span></div></td><td><input type='number' id='txtQuantity' class='form-control' /></td><td><a style='padding: 5px;' ng-click='addnewrowchild($event,\"" + b + "\")'><i class='fa fa-plus'></i></a><a style='padding: 5px;color:red' ng-click='deleterowchild($event,\"" + b + "\")'><i class='fa fa-trash'></i></a></td></tr>").toString();
            var temp = $compile(Rowhtml)($scope);
            $($("#tblPOSchedule" + b)[0].children[1]).append(temp);
        }
    }
    $scope.addnewrow = function (a) {

        if ($scope.isDisabled == false) {
            var e = a.target;
            var tr = $("#divTarget").find(".hideandshow");
            var txt = "";
            //for (var i = 0; i < tr.length; i++) {
            //    var td = tr[i].cells;
            //    var Product = $(td[0]).find("select").val();
            //    var Qty = $(td[3]).find("input").val();
            //    var price = $(td[4]).find("input").val();
            //    if (Product == "") {
            //        message = "Select Product at row " + (i + 1);
            //        toastr["error"](message, "Notification");
            //        txt = "asd";
            //    }
            //    else if (Qty == "") {
            //        message = "Enter the Opening Qty at row " + (i + 1);
            //        toastr["error"](message, "Notification");
            //        txt = "asd";
            //    }
            //    else if (price == "") {
            //        message = "Enter the Opening Rate at row " + (i + 1);
            //        toastr["error"](message, "Notification");
            //        txt = "asd";
            //    }
            //}
            if (txt == "") {
                id = 0;
                while (document.getElementById("collapseExampleid_" + id)) {
                    id++;
                }
                var sdf = "_" + id;
                var Rowhtml = $scope.singlerowdata.replace(/\id_0/g, 'id_' + id);
                var temp = $compile(Rowhtml)($scope);
                angular.element(document.getElementById('divTarget')).append(temp);
            }
        }
        else {
            message = "You cannot add products in One-One PO";
            toastr["error"](message, "Notification");
        }
    }
    $scope.deleterowchild = function (a, b) {

        var e = a.target;
        var len = $("#tblPOSchedule" + b)[0].children[1].children.length;
        if (len != 1) {
            $(e).parent().parent().parent().fadeOut(300, function () { $(this).remove(); });
        }
        else {
            message = "Atleast one Schedule required";
            toastr["error"](message, "Notification");
        }
    }
    $scope.deleterow = function (a, f) {

        if ($scope.isDisabled == false) {
            var e = a.target;
            if ($('[id="id_addnewrow"]').length > 1) {
                $("#collapseExample" + f).parent().parent().fadeOut(300, function () { $(this).remove(); });
                $(e).parent().parent().parent().fadeOut(300, function () { $(this).remove(); });
            } else {
                message = "Atleast one Product required";
                toastr["error"](message, "Notification");
            }
            var sdfs = $(e).parent().parent().parent();
            var lj = $(e).parent().parent().parent()[0].children[6];
            var lj = $(e).parent().parent().parent()[0].children[6].children[0];
            calculateamount($($(e).parent().parent().parent()[0].children[6].children[0]).val());
        }
        else {
            message = "You cannot delete products in One-One PO";
            toastr["error"](message, "Notification");
        }
    }
    function calculateamount(e) {
        var tbl = $("#divTarget").children();
        var total = 0;
        for (var i = 0; i < tbl.length;) {
            var td1 = tbl[i].children;
            if ($(td1[6].children[0]).val() != '')
                total = total + parseFloat($(td1[6].children[0]).val());
            i = i + 2;
        }
        var vale = 0;
        if (e != "")
            vale = parseFloat(e);
        $("#txttotalamount").val((total - vale).toFixed(3));
    }
    $scope.showRecords = function () {

        $("#advancedusage").dataTable().fnDestroy();
        GetPOList();
        $("#div_View").css("display", "block");
        $("#div_Restore").css("display", "none");
        $("#div_Edit").css("display", "none");
        $scope.PODetails1 = null;
    }
    $scope.restoreRecords = function () {

        $("#advancedusageRestore").dataTable().fnDestroy();
        GetStoreRestoreList();
        $("#div_View").css("display", "none");
        $("#div_Restore").css("display", "block");
        $("#div_Edit").css("display", "none");
    }
    $scope.createnew = function () {
        if ($scope.Iscreate) {
            $('#viewpopup').html("");
            $("#formSubmit").attr('disabled', "disabled");
            $("#div_View").css("display", "none");
            $("#div_Edit").css("display", "block");
            $scope.submittext = "Submit";
            $scope.createedit = "Create";
            $scope.PP_ID = "0";
            $scope.PO_Code = "";
            $scope.PO_OrderReference = "0";
            $("#drpOrderReference").val("0").trigger("chosen:updated");
            $("#OrderReference").hide();
            $scope.PO_type = "";
            $("#drpType").val("").trigger("chosen:updated");
            $scope.Po_CurrencyKey = "";
            $scope.Po_PaymentTerms = "0";
            $scope.Po_Supplierkey = "";
            $scope.Po_SupplierAddress = "";
            $scope.GI_StoreCode = "0";
            $scope.Po_ShippingAddress = "";
            $scope.Po_TotalAmount = "0";
            $scope.Po_SpecialInstruction = "";
            $scope.Po_TermsandConditions = "";
            $scope.Po_DeliveryShedule = false;
           // $scope.txtDeliveryDate = "";
            $("#txtDeliveryDate").val("");
            $("#txtPODate").val("");
            $("#txtSCDate").val("");
            $scope.txtScNo = "";
            $("#txttotalamount").val("");
            $scope.Po_TotalAmount = "0";
            $scope.ProductData1 = null;
            PaymentTerms();
            getOrderReference($scope.PP_ID);

            $("#drpsuppliername").val("").trigger("chosen:updated");
            $("#drpcurrency").val("").trigger("chosen:updated");
            $("#chkDeliveryShedule").prop('checked', false);
            $scope.isschedule = false;

            // var Rowhtml = "<tr><td><select class='form-control' id='drpProduct' onchange='ProductChange(this);'><option value=''>-Select-</option><option ng-repeat='product in products' value='{{ product.P_ID }}'>{{ product.P_ArticleNo }}</option ></select></td><td><input type='text' id='txtProductName' class='form-control' readonly='readonly' /></td><td><input type='text' id='txtUOM' class='form-control' readonly='readonly'/></td><td><input type='number' id='txtPackage' class='form-control'/></td><td><input type='number' id='txtQuantity' class='form-control' /></td><td><input type='number' id='txttax' class='form-control' /></td><td><input type='number' id='txttotalAmount' class='form-control' readonly='readonly'/></td> <td><a style='padding: 5px;' ng-click='addnewrow($event)'><i class='fa fa-plus'></i></a><a style='padding: 5px;color:red' ng-click='deleterow($event)'><i class='fa fa-trash'></i></a><a style='padding: 5px;color:green' title='Delivery Schedule' ng-click='deleterow($event)'><i class='fa fa-truck'></i></a></td></tr>";
            var temp = $compile($scope.singlerowdata)($scope);
            angular.element(document.getElementById('divTarget')).html("");
            angular.element(document.getElementById('divTarget')).append(temp);
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }
    function getOrderReference(PPID) {
        var getOrderReferences = $http.get("/ET_Purchase_PO/GetOrderReference",
            {
                params: {
                    PP_ID: PPID

                }
            });
        getOrderReferences.then(function (orderreferencelist) {
             
            var res = JSON.parse(orderreferencelist.data);
            $scope.orderreferencelist = res;
            //$scope.PO_OrderReference = "0";
        }, function () {
            alert("Supplier Not Found");
        });
    }
    $scope.DeliveyScheduleChange = function () {

        if ($("#chkDeliveryShedule").prop('checked')) {
            $("#txtDeliveryDate").val("");
            $("#txtDeliveryDate").attr('disabled', "disabled");
            $("#txtDeliveryDate").removeAttr('required');
            var tr = $("#tblSalesTarget").find("tr");
            var txt = "";
            $scope.isschedule = true;
            //var Rowhtml = "<tr><td> <div class='input-group datepicker w-360' style='width: 100%'><input type = 'text' id = 'txtDSDate' name = 'txtDSDate' class='form-control'/><span class='input-group-addon'><span class='fa fa-calendar'></span></span></div ></td><td><input type='number' id='txtQuantity' class='form-control' /></td><td><a style='padding: 5px;' ng-click='addnewrowchild($event)'><i class='fa fa-plus'></i></a><a style='padding: 5px;color:red' ng-click='deleterowchild($event)'><i class='fa fa-trash'></i></a></td></tr>";
            //var temp = $compile(Rowhtml)($scope);
            //angular.element(document.getElementById('storedetailsbody')).html("");
            //angular.element(document.getElementById('storedetailsbody')).append(temp);

        }
        else {
            $("#txtDeliveryDate").removeAttr('disabled');
            $("#txtDeliveryDate").attr('required', true);
            var tr = $("#tblSalesTarget").find("tr");
            var txt = "";
            $scope.isschedule = false;
            $("#tblSalesTarget .collapse").attr('class', 'collapse');
        }
    }
    function validate() {

        var tbl = $("#divTarget").children();
        var txt = "";
        if ($("#txtPODate").val() == "") {
            message = "Enter PO Date";
            toastr["error"](message, "Notification");
            return "";
        }
        if ($scope.PO_Type == "") {
            message = "Select PO Type";
            toastr["error"](message, "Notification");
            return "";
        }
        if ($scope.PO_Type == 2) {
            if (PO_OrderReference == "") {
                message = "Select Order Reference";
                toastr["error"](message, "Notification");
                return "";
            }
            if ($scope.Po_ShippingAddress == "") {
                message = "Enter The Shipping Address";
                toastr["error"](message, "Notification");
                return "";
            }
        }
        if ($scope.PO_Type == 3) {
            if ($scope.GI_StoreCode == "0") {
                message = "Select The Store";
                toastr["error"](message, "Notification");
                return "";
            }
        }
        if ($scope.Po_CurrencyKey == "") {
            message = "Select Currency";
            toastr["error"](message, "Notification");
            return "";
        }
        if ($scope.Po_Supplierkey == "") {
            message = "Select Supplier";
            toastr["error"](message, "Notification");
            return "";
        }
        
        if ($scope.Po_TotalAmount == "") {
            message = "Enter The Total Amount";
            toastr["error"](message, "Notification");
            return "";
        }
        
        if (!$("#chkDeliveryShedule").prop('checked')) {
            if ($("#txtDeliveryDate").val() == "") {
                message = "Enter Delivery Date";
                toastr["error"](message, "Notification");
                return "";
            }

        }
        for (var i = 0; i < tbl.length;) {
            var td1 = tbl[i].children;
            var product = $(td1[0].children[0]).val();
            var qty = parseFloat($(td1[3].children[0]).val().split('.').join("").replace(",", "."));
            var total = $(td1[5].children[0]).val();
            if (product == "") {
                message = "Select Product Name at row:" + ((i / 2) + 1);
                toastr["error"](message, "Notification");
                return "";
            } else if (qty == "") {
                message = "Enter PO Quantity at row:" + ((i / 2) + 1);
                toastr["error"](message, "Notification");
                return "";
            }
            else if (total == "") {
                message = "Total cannot be empty at row:" + ((i / 2) + 1);
                toastr["error"](message, "Notification");
                return "";
            }
            else if (parseFloat(total.split('.').join("").replace(",", ".")) == 0) {
                message = "Total cannot be 0 at row:" + ((i / 2) + 1) + ". Set Supplier Price.";
                toastr["error"](message, "Notification");
                return "";
            }
            else {
                var schd = "";
                if ($("#chkDeliveryShedule").prop('checked')) {
                    var tr1 = $(tbl[i + 1]).find("#storedetailsbody")[0].children;
                    var qty1 = 0;
                    for (var k = 0; k < tr1.length; k++) {
                         
                        if ($(tr1[k]).find('#txtDSDate').val() == "") {
                            message = "Select Schedule Date for product : " + ((i / 2) + 1) + " at row :" + (k + 1);
                            toastr["error"](message, "Notification");
                            return "";
                        }
                        if ($(tr1[k]).find('#txtQuantity').val() == "") {
                            message = "Enter Schedule Quantity for product : " + ((i / 2) + 1) + " at row :" + (k + 1);
                            toastr["error"](message, "Notification");
                            return "";
                        }
                        schd = schd + $(tr1[k]).find('#txtDSDate').val() + "@";
                        schd = schd + parseFloat($(tr1[k]).find('#txtQuantity').val().split('.').join("").replace(",", ".")) + "$";
                        qty1 = qty1 + parseFloat($(tr1[k]).find('#txtQuantity').val().split('.').join("").replace(",", "."));
                    }
                    if (qty != qty1) {
                        message = "PO Quantity is not distributed in schedule at row :" + ((i / 2) + 1);
                        toastr["error"](message, "Notification");
                        return "";
                    }
                }
                txt = txt + $(td1[0].children[0]).val() + ",";
                txt = txt + $(td1[0].children[0]).find("option:selected").text() + ",";
                txt = txt + $(td1[1].children[0]).val() + ",";
                txt = txt + $(td1[2].children[0]).val() + ",";
                txt = txt + parseFloat($(td1[3].children[0]).val().split('.').join("").replace(",", ".")) + ",";
                txt = txt + parseFloat($(td1[4].children[0]).val().split('.').join("").replace(",", ".")) + ",";
                txt = txt + parseFloat($(td1[5].children[0]).val().split('.').join("").replace(",", ".")) + ",";
                txt = txt + $(td1[6].children[0]).val() + ",";
                txt = txt + schd + "|";
            }
            i = i + 2;
        }
        return txt;
    }
    $scope.SubmitClick = function () {
        var date = $("#txtPODate").val();
        console.log($scope.GI_StoreCode)
        var txt = validate();
        if (txt != "") {
            var post = $http({
                method: "POST",
                url: "/ET_Purchase_PO/ET_Master_PO_Add",
                dataType: 'json',
                data: {
                    PP_ID: $scope.PP_ID,
                    PO_Code: $scope.PO_Code,
                    PO_Date: $("#txtPODate").val(),
                    PO_Type: $scope.PO_Type,
                    PO_OrderReference: $scope.PO_OrderReference,
                    Po_CurrencyKey: $scope.Po_CurrencyKey,
                    Po_Supplierkey: $scope.Po_Supplierkey,
                    Po_DeliveryShedule: $scope.Po_DeliveryShedule,
                    Po_PaymentTerms: $scope.Po_PaymentTerms,
                    Po_DeliveryDate: $("#txtDeliveryDate").val(),
                    Po_TotalAmount: parseFloat($("#txttotalamount").val().split('.').join("").replace(",", ".")),
                    Po_ShippingAddress: $scope.Po_ShippingAddress,
                    Po_StoreId: $scope.GI_StoreCode,
                    Po_SupplierAddress: $scope.Po_SupplierAddress,
                    PO_ScNo: $scope.txtScNo,
                    PO_ScDate: $("#txtSCDate").val(),
                    Po_SpecialInstruction: $scope.Po_SpecialInstruction,
                    Po_TermsandConditions: $scope.Po_TermsandConditions,
                    PODetails: txt
                },
                headers: { "Content-Type": "application/json" }
            });

            post.success(function (data, status) {

                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else if (data.indexOf("Validation") > -1) {
                    toastr["error"](data, "Notification");
                }
                else if (data.indexOf("Success") > -1) {
                    var res = data.split(':');
                    if ($scope.PP_ID == 0) {
                        message = 'Record Inserted Successfully With Code : ' + res[1];
                        toastr["success"](message, "Notification");
                    }
                    else {
                        message = 'Record Updated Successfully With Code : ' + res[1];
                        toastr["success"](message, "Notification");
                    }
                    $scope.createnew();
                }
                else {
                    message = "Failed to do this operation.";
                    toastr["error"](message, "Notification");
                }
            });

            post.error(function (data, status) {
                alert(data)
                $window.alert(data.Message);
            });
        }

    }
    $scope.editRecords = function (a) {
        a = parseInt(a);
        if ($scope.Isedit) {
            var post = $http({
                method: "POST",
                url: "/ET_Purchase_PO/ET_Master_PO_Update_GetbyID",
                dataType: 'json',
                data: {
                    id: a
                },
                headers: { "Content-Type": "application/json" }
            });
            post.success(function (data, status) {
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else {
                     
                    $('#viewpopup').html("");
                    var POByID = JSON.parse(data);
                    $("#formSubmit").removeAttr('disabled');
                    $("#div_View").css("display", "none");
                    $("#div_Edit").css("display", "block");
                    $scope.submittext = "Update";
                    $scope.createedit = "Edit";
                    $("#span_tabtext").html("Edit");
                    $scope.PO_Type = POByID.PO_Type;
                    getOrderReference(POByID.PP_ID);
                    PaymentTerms(POByID.PP_ID);
                    $scope.PP_ID = POByID.PP_ID;
                    $scope.PO_Code = POByID.PO_Code;
                    $scope.Po_CurrencyKey = POByID.Po_CurrencyKey;
                    $scope.Po_PaymentTerms = POByID.Po_PaymentTerms;
                    $scope.Po_Supplierkey = POByID.Po_Supplierkey;
                    $scope.Po_SupplierAddress = POByID.Po_SupplierAddress;
                    $scope.txtScNo = POByID.PO_SCNo;
                    $scope.Po_ShippingAddress = POByID.Po_ShippingAddress;
                    $scope.GI_StoreCode = POByID.PO_SMId;
                    $scope.Po_TotalAmount = parseFloat(POByID.Po_TotalAmount).toLocaleString("es-ES", { minimumFractionDigits: 3 });
                    $scope.Po_SpecialInstruction = POByID.Po_SpecialInstruction;
                    $scope.Po_TermsandConditions = POByID.Po_TermsandConditions;
                    $scope.Po_DeliveryShedule = POByID.Po_DeliveryShedule;
                    $scope.PO_OrderReference = POByID.PO_OrderReference;
                    OrderTypeChanged();
                    $("#chkDeliveryShedule").prop('checked', POByID.Po_DeliveryShedule);
                    $("#drpcurrency").val(POByID.Po_CurrencyKey).trigger("chosen:updated");
                    $("#drpsuppliername").val(POByID.Po_Supplierkey).trigger("chosen:updated");
                    $("#drpOrderReference").val(POByID.PO_OrderReference).trigger("chosen:updated");
                    $("#drpType").val(POByID.PO_Type).trigger("chosen:updated");
                    debugger;
                    getproductBySupplierAndOrder(POByID.PP_ID, POByID.Po_Supplierkey);
                    var Quotationdate = new Date(parseInt(POByID.PO_Date.substr(6)));
                    var QDT = ("0" + (Quotationdate.getMonth() + 1)).slice(-2) + "-" + ("0" + Quotationdate.getDate()).slice(-2) + "-" + Quotationdate.getFullYear();

                    $("#txtPODate").val(QDT);
                
                    if (POByID.PO_SCDate == null) {
                        $("#txtSCDate").val("");
                    }
                    else {
                        var SCdate = new Date(parseInt(POByID.PO_SCDate.substr(6)));
                        var SCDT = ("0" + (SCdate.getMonth() + 1)).slice(-2) + "-" + ("0" + SCdate.getDate()).slice(-2) + "-" + SCdate.getFullYear();

                        $("#txtSCDate").val(SCDT);
                    }
                    if (POByID.PO_Date == null) {
                        $("#txtDeliveryDate").val("");
                    }
                    else {
                        var DeliveryDate = new Date(parseInt(POByID.PO_Date.substr(6)));
                        var DDate = ("0" + (DeliveryDate.getMonth() + 1)).slice(-2) + "-" + ("0" + DeliveryDate.getDate()).slice(-2) + "-" + DeliveryDate.getFullYear();
                        $("#txtDeliveryDate").val(DDate);
                    }
                   
                   
                    PODetails(POByID.PP_ID);
                    $scope.DeliveyScheduleChange();

                }
            });

            post.error(function (data, status) {
                $window.alert(data.Message);
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }
    function getproductBySupplierAndOrder(PP_ID, SupplierID) {
        
        var getProducts = $http.get("/ET_Purchase_PO/GetProductBySupplierAndOrder",
        {
            params: {
                PP_ID: PP_ID,
                SupplierKey: SupplierID,
            }
        });
        getProducts.then(function (productlist) {
             
            var res = JSON.parse(productlist.data);
            $scope.products = res;
        }, function () {
            alert("Supplier Not Found");
        });
           
}
    function PODetails(e) {
        var id = e;
        $http({
            method: 'POST',
            url: '/ET_Purchase_PO/ET_Master_PO_Details_Load',
            type: 'html',
            data: {
                id: id,
            },
        }).success(function (data) {
             
            angular.element(document.getElementById('divTarget')).html("");
            var temp = $compile(data)($scope);
                angular.element(document.getElementById('divTarget')).append(temp);
            $scope.PODetails1 = data;
        });
    }
    $scope.Restoredeleterecords = function (a, $event, b) {

        var res = false;
        if (b)
            res = $scope.Isdelete;
        else
            res = $scope.Isrestore
        if (res) {
            var post = $http({
                method: "POST",
                url: "/ET_Purchase_PO/ET_Master_PO_RestoreDelete",
                dataType: 'json',
                data: {
                    id: a,
                    type: b
                },
                headers: { "Content-Type": "application/json" }
            });
            post.success(function (data, status) {
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    if (data == "Success") {
                        $($event.target.parentElement.parentElement.parentElement).fadeOut(800, function () { $(this).remove(); });
                        if (b) {
                            message = "Record Deleted Successfully.";
                        }
                        else {
                            message = "Record Restored Successfully.";
                        }

                        toastr["success"](message, "Notification");
                    }
                    else {
                        message = "Failed to do this operation.";
                        toastr["error"](message, "Notification");
                    }
                }
            });
            post.error(function (data, status) {
                $window.alert(data.Message);
            });
        }
    }
    $scope.ViewRecords = function (a,b) {
        a = parseInt(a);
         
        if ($scope.Isview) {
            var post = $http({
                method: "POST",
                url: "/ET_Purchase_PO/ET_Purchase_PO_View",
                dataType: 'html',
                data: {
                    id: a,
                    PO_OrderReference:b
                },
                headers: { "Content-Type": "application/json" }
            });
            post.success(function (data, status) {
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    $('#viewpopup').html(data);
                    $("#btnviewpopup").trigger("click");
                    //var privilage = JSON.parse(data);
                    //$scope.txtMaterialCodeView = privilage[0].MATERIAL_CODE;
                    //$scope.txtMaterialnameView = privilage[0].MATERIAL_NAME;
                    //$scope.txtDescriptionView = privilage[0].MATERIAL_DESCRIPTION;
                    //if (privilage[0].COTTON_PER == 1)
                    //    $scope.chkCottonView = true;
                    //else
                    //    $scope.chkCottonView = false;
                    //$rootScope.$emit("CallParentMethod", { a: $scope.txtMaterialCodeView, b: $scope.txtMaterialnameView, c: $scope.txtDescriptionView, d: $scope.chkCottonView });

                }
            });

            post.error(function (data, status) {
                alert(data)
                $window.alert(data.Message);
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }
    $scope.$watch("currencylist", function (value) {
        var val = value || null;
        if (val) {
             
            setTimeout(function () { $("#drpcurrency").val($scope.Po_CurrencyKey).trigger("chosen:updated"); }, 100);
        }
    });
    $scope.$watch("orderreferencelist", function (value) {
         
        var val = value || null;
        if (val) {
            
            setTimeout(function () { $("#drpOrderReference").val($scope.PO_OrderReference).trigger("chosen:updated"); }, 100);
        }
    }); 
    $scope.$watch("supplierslist", function (value) {
         
        var val = value || null;
        if (val) {
            setTimeout(function () { $("#drpsuppliername").val($scope.Po_Supplierkey).trigger("chosen:updated"); }, 100);
        }
    });
    $scope.$watch("paymenttermlist", function (value) {

        var val = value || null;
        if (val) {
            setTimeout(function () { $("#drpPaymentTerms").val($scope.Po_PaymentTerms).trigger("chosen:updated"); }, 100);
        }
    });
    $scope.$watch("storelist", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () {
                dynamicDataTable('#advancedusage', '#tableTools', '#colVis');
            }, 5);
        }
    });
    $scope.$watch("GI_StoreCode", function (value) {
            setTimeout(function () { $("#drpStoreCode").val($scope.GI_StoreCode).trigger("chosen:updated"); }, 100);
    });
    $scope.$watch("storelists", function (value) {

        var val = value || null;
        if (val) {
            setTimeout(function () { $("#drpStoreCode").val($scope.GI_StoreCode).trigger("chosen:updated"); }, 100);
        }
    });
    $scope.$watch("porestorelist", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () {
                dynamicDataTable('#advancedusageRestore', '#tableToolsRestore', '#colVisRestore');
            }, 5);
        }
    });
    $scope.$watch("PODetails1", function (value) {
        var val = value || null;
        if (val) {
            var PODetails1 = $scope.PODetails1;
            setTimeout(function () {
                 
                var tbl = $("#divTarget").children();
                var txt = "";
                for (var i = 0; i < tbl.length;) {
                    var td1 = tbl[i].children;
                    $(td1[0].children[0]).val($(td1[0].children[0]).attr("ng-init"));
                    if ($scope.PO_Type == 2) {
                        td1[0].children[0].setAttribute("disabled", "disabled")
                        td1[3].children[0].setAttribute("disabled", "disabled")
                    }
                    i = i + 2;
                }
            }, 1000);
        }
    });

});