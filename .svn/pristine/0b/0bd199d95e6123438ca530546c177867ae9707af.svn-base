app1.controller("AC_ProductCatalogCtrl", function ($scope, $http, $window) {
    GetPrivilages();
    GetProductList();
    GetProductCatalog();
    GetUOM();
    // Ger privilages
    function GetPrivilages() {
        var getprivilages = $http.get("/ET_Admin_SystemSetUp/GetPrivilages");
        getprivilages.then(function (privilage1) {



            var privilage = JSON.parse(privilage1.data);
            $scope.Iscreate = privilage[0].IS_ADD;
            $scope.Isedit = privilage[0].IS_EDIT;
            $scope.Isdelete = privilage[0].IS_DELETE;
            $scope.Isrestore = privilage[0].IS_FULLCONTROL;
            $scope.Isview = privilage[0].IS_VIEW;

        }, function () {
            alert('Privilages Not Found');
        }
        );
    }

    function GetProductCatalog() {
        var GetProductCatalogList = $http.get("/ET_Admin_ProductCatalog/GetProductCatalogList",
            {
                params: { deleted: false }
            });
        GetProductCatalogList.then(function (result) {
            debugger;
            $scope.ProductCatalogLists = result.data;
        }, function () {
            alert("No Data Found");
        });
    }
    function GetProductCatalogrestoreList() {
        var GetProductCatalogRestoreList = $http.get("/ET_Admin_ProductCatalog/GetProductCatalogRestoreList",
            {
                params: { deleted: false }
            });
        GetProductCatalogRestoreList.then(function (result) {
            debugger;
            $scope.ProductCatalogRestoreLists = result.data;
        }, function () {
            alert("No Data Found");
        });
    }
    function GetProductList() {
        var getProductllist = $http.get("/ET_Admin_ProductCatalog/GetProductList");
        getProductllist.then(function (product) {
            $scope.products = product.data;
        }, function () {
            alert('Data not found');
        });
    }
    function GetUOM() {
        var getUOMllist = $http.get("/ET_Admin_ProductCatalog/GetUOMList");
        getUOMllist.then(function (UOM) {
            $scope.UOMS = UOM.data;
        }, function () {
            alert('Data not found');
        });
    }
    $scope.GetProduct_Details = function () {
        a = $scope.SelectedProduct;
        var get = $http({
            method: "POST",
            url: "/ET_Admin_ProductCatalog/GetProductDetails",
            dataType: 'json',
            data: {
                id: a
            },
            headers: { "Content-Type": "application/json" }
        });
        get.success(function (data, status) {
            if (data == "Session Expired") {
                $window.location.href = '/ET_Login/ET_SessionExpire';
            }
            else if (data.indexOf("ERR") > -1) {
                $("#spanErrMessage1").html(data);
                $("#spanErrMessage2").html(data);
                if ($("#exceptionmessage").length)
                    $("#exceptionmessage").trigger("click");
            }
            else {
                var res = JSON.parse(data);
                $scope.txtProductCode = res.P_ArticleNo;
                $scope.txtProductSpecification = res.P_Description;
                $scope.SelectedUOM = res.P_UOM;
                

                $("#drpUOM").val(res.P_UOM).trigger("chosen:updated");
                $("#div_Edit").css("display", "block");
                $scope.submittext = "Update";
                $scope.Edit = "Edit";
                $("#span_tabtext").html("Edit");
            }
        });

        get.error(function (data, status) {
            $window.alert(data.Message);
        });
    }
    $scope.$watch("products", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () { $("#drpProduct").val($scope.SelectedProduct).trigger("chosen:updated"); }, 100);
        }
    });
    $scope.$watch("UOMS", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () { $("#drpUOM").val($scope.SelectedUOM).trigger("chosen:updated"); }, 100);
        }
    });
    $scope.showRecords = function () { 
        $("#div_View").css("display", "block");
        $("#div_Restore").css("display", "none");
        $("#div_Edit").css("display", "none");
    }
    $scope.restoreRecords = function () {
        $("#div_View").css("display", "none");
        $("#div_Restore").css("display", "block");
        $("#div_Edit").css("display", "none");
    }
    // Create function
    $scope.createnew = function () {
        if ($scope.Iscreate) {
            
            $("#div_View").css("display", "none");
            $("#div_Edit").css("display", "block");
            $("#formSubmit").attr('disabled', "disabled");
            $("#htndiscountpersentage").addClass("hidden");
            $("#htndiscountamount").addClass("hidden");
            $("#htnadvancetype").addClass("hidden");

            $scope.PriceBookId = 0;
            $scope.SelectedProduct = " ";
            $scope.txtProductCode = "";
            $scope.txtProductSpecification = "";
            $scope.SelectedUOM = " ";
            $scope.txtUnitPrice = "";
            $("#txtEnqDate").val("");
            $scope.submittext = "Submit";
            $scope.createedit = "Create";
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }

    // Insert and Update function
    $scope.SubmitClick = function () {
        debugger;

        var post = $http({
            method: "POST",
            url: "/ET_Admin_ProductCatalog/ET_Admin_ProductCatalog_Add",
            dataType: 'json',
            data: {
                PriceBookId: $scope.PriceBookId,
                PriceBookCode: $scope.txtPriceBookCode,
                ProductId: $scope.SelectedProduct,
                ProductCode: $scope.txtProductCode,
                ProductSpecification: $scope.txtProductSpecification,
                uom: $scope.SelectedUOM,
                unitprice: $scope.txtUnitPrice,
                lastpricerewisedate: $("#txtEnqDate").val()
            },
            headers: { "Content-Type": "application/json" }
        });

        post.success(function (data, status) {

            if (data == "Session Expired") {
                $window.location.href = '/ET_Login/ET_SessionExpire';
            }
            else if (data.indexOf("ERR") > -1) {
                $("#spanErrMessage1").html(data);
                $("#spanErrMessage2").html(data);
                if ($("#exceptionmessage").length)
                    $("#exceptionmessage").trigger("click");
            }
            else if (data.indexOf("Validation") > -1) {
                toastr["error"](data, "Notification");
            }
            else if (data == "Success") {
                if ($scope.pamentID == 0) {
                    message = 'Record Inserted Successfully.';
                    toastr["success"](message, "Notification");
                }
                else {
                    message = 'Record Updated Successfully.';
                    toastr["success"](message, "Notification");
                }

                $scope.createnew();


                $scope.submittext = "Submit";
                $scope.createedit = "Create";
                $("#formSubmit").attr('disabled', "disabled");
            }
            else {
                message = "Failed to do this operation.";
                toastr["error"](message, "Notification");
            }
        });

        post.error(function (data, status) {
            $window.alert(data.Message);
        });
    }

    // Edit function
    $scope.editRecords = function (a) {
        a = parseInt(a);
        if ($scope.Isedit) {
            var get = $http({
                method: "POST",
                url: "/ET_Admin_ProductCatalog/ET_Admin_ProductCatalog_Update_GetbyID",
                dataType: 'json',
                data: {
                    id: a
                },
                headers: { "Content-Type": "application/json" }
            });
            get.success(function (data, status) {
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    var res = JSON.parse(data);
                    debugger;
                    var date = new Date(res.LAST_PRICE_REVISE_DATE,"mm/dd/yyyy");
                    $scope.PriceBookId = res.PC_ID;
                    $scope.txtProductCode = res.PC_CODE;
                    $scope.txtProductSpecification = res.PC_CODE;
                    $scope.SelectedUOM = res.UOM;
                    $("#txtEnqDate").val(res.LAST_PRICE_REVISE_DATE);
                    $("#drpUOM").val(res.UOM).trigger("chosen:updated");
                    $("#drpProduct").val(res.PRODUCT_ID).trigger("chosen:updated");
                    $scope.SelectedProduct = res.PRODUCT_ID;
                    $scope.txtUnitPrice = res.UNIT_PRICE;
                    $scope.GetProduct_Details();

                    $("#formSubmit").removeAttr('disabled');
                    $("#div_View").css("display", "none");
                    $("#div_Edit").css("display", "block");
                    $scope.submittext = "Update";
                    $scope.createedit = "Edit";
                    $("#span_tabtext").html("Edit");
                }
            });

            get.error(function (data, status) {
                $window.alert(data.Message);
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }
    $scope.Restoredeleterecords = function (a, $event, b) {
        var res = false;
        if (b)
            res = $scope.Isdelete;
        else
            res = $scope.Isrestore
        if (res) {
            var post = $http({
                method: "POST",
                url: "/ET_Admin_ProductCatalog/ET_Admin_ProductCatalog_Restore_delete",
                dataType: 'json',
                data: {
                    id: a,
                    type: b,
                },
                headers: { "Content-Type": "application/json" }
            });
            post.success(function (data, status) {
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    if (data == "Success") {
                        $($event.target.parentElement.parentElement.parentElement).fadeOut(800, function () { $(this).remove(); });
                        if (b) {
                            message = "Record Deleted Successfully.";
                        }
                        else {
                            message = "Record Restored Successfully.";
                        }

                        toastr["success"](message, "Notification");

                        AC_GetPayment_List();
                    }
                    else {
                        message = "Failed to do this operation.";
                        toastr["error"](message, "Notification");
                    }
                }
            });
            post.error(function (data, status) {
                $window.alert(data.Message);
            });
        }
    }
    
});