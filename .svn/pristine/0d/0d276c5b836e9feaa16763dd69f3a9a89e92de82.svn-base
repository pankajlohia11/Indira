app1.controller("AC_PacinglistCtrl", function ($scope, $http, $window, $compile) {
    GetPrivilages();
    GetPackingList();
    GetOrderList();
    GetProducts(); 
    function GetPrivilages()
    {
        var getprivilages = $http.get("/ET_Sales_PackingList/GetPrivilages");
        getprivilages.then(function (privilage1) {
            var privilage = JSON.parse(privilage1.data);
            $scope.Iscreate = privilage[0].IS_ADD;
            $scope.Isedit = privilage[0].IS_EDIT;
            $scope.Isdelete = privilage[0].IS_DELETE;
            $scope.Isrestore = privilage[0].IS_FULLCONTROL;
            $scope.Isview = privilage[0].IS_VIEW;
        }, function () {
            alert('Privilages Not Found');
        }
        );
    }
    function GetPackingList() {
        var getstorelist = $http.get("/ET_Sales_PackingList/GetPackingList",
            {
                params: { delete: false }
            });
        getstorelist.then(function (storelist) {
            var res = JSON.parse(storelist.data);
            $scope.storelist = res;
        }, function () {
            alert("No Data Found");
        });
    }
    function GetStoreRestoreList() {
        var getstorerestorelist = $http.get("/ET_Sales_PackingList/GetPackingList",
            {
                params: { delete: true }
            });
        getstorerestorelist.then(function (storerestorelist) {
            var res = JSON.parse(storerestorelist.data);
            $scope.storerestorelist = res;
        }, function () {
            alert("No Data Found");
        });
    }
    
    function GetOrderList() {
        debugger;
        var getstoreuserlist = $http.get("/ET_Sales_PackingList/GetOrderList");
        getstoreuserlist.then(function (storeuserlist) {

            var res = JSON.parse(storeuserlist.data);
            $scope.storeuserlist = res;
            $scope.PL_OrderNo = "";
        }, function () {
            alert("No Users Found");
        });
    }
    function GetProducts() {
        var getproductlist = $http.get("/ET_Sales_PackingList/GetProducts");
        getproductlist.then(function (productlist) {
            var res = JSON.parse(productlist.data);
            $scope.products = res;
        }, function () {
            alert('Data not found');
        });
    } 
    $scope.UserChange = function () {
    }

    $scope.addnewrow = function (a) {
        debugger;
        var e = a.target;
        var tr = $("#storedetailsbody").find("tr");
        var txt = "";
        for (var i = 0; i < tr.length; i++) {
            var td = tr[i].cells;
            var Product = $(td[0]).find("select").val(); 
            if (Product == "") {
                message = "Select Product at row " + (i + 1);
                toastr["error"](message, "Notification");
                txt = "asd";
            } 
        }
        if (txt == "") {
            var Rowhtml = "<tr><td><select class='form-control' id='drpProduct' onchange='ProductChange(this);'><option value=''>-Select-</option><option ng-repeat='product in products' value='{{ product.P_ID }}'>{{ product.P_ArticleNo }}</option ></select></td><td><input type='text' id='txtProductName' class='form-control' readonly='readonly' /><td><input type='text' id='txtpalletno' class='form-control' /></td><td><input type='text' id='txtPalletNo' class='form-control'/></td><td><input type='text' id='txtDesignNo' class='form-control'/></td><td><input type='text' id='txtNoofpeices' class='form-control' /></td><td><input type='text' id='txtTotalMeters' class='form-control' /></td><td><input type='text' id='txtNwtinKGS' class='form-control' /></td><td><input type='text' id='txtGwtinKGS' class='form-control' /></td><td><a style='padding: 5px;' ng-click='addnewrow($event)'><i class='fa fa-plus'></i></a><a style='padding: 5px;color:red' ng-click='deleterow($event)'><i class='fa fa-trash'></i></a></td></tr>";
            var temp = $compile(Rowhtml)($scope);
            angular.element(document.getElementById('storedetailsbody')).append(temp);
        }
    }
    $scope.deleterow = function (a) {
        var e = a.target;
        var len = $("#storedetailsbody").find("tr").length;
        if (len != 1) {
            $(e).parent().parent().parent().fadeOut(300, function () { $(this).remove(); });
        }
        else {
            message = "Atleast one Product required";
            toastr["error"](message, "Notification");
        }
    }

    $scope.showRecords = function () {
        debugger;
        $("#advancedusage").dataTable().fnDestroy();
        GetPackingList();
        $("#div_View").css("display", "block");
        $("#div_Restore").css("display", "none");
        $("#div_Edit").css("display", "none");
        $("#div_Print").css("display", "none");
    }
    $scope.restoreRecords = function () {
        $("#advancedusageRestore").dataTable().fnDestroy();
        GetStoreRestoreList();
        $("#div_View").css("display", "none");
        $("#div_Restore").css("display", "block");
        $("#div_Edit").css("display", "none");
        $("#div_Print").css("display", "none");
    }
    $scope.createnew = function () {
        if ($scope.Iscreate) {
            debugger;
            $("#formSubmit").attr('disabled', "disabled");
            $("#div_View").css("display", "none");
            $("#div_Edit").css("display", "block");
            $("#div_Print").css("display", "none");
            $scope.submittext = "Submit";
            $scope.createedit = "Create";
            $scope.PL_ID = "0";
            $scope.PL_Code = ""; 
            $scope.PL_OrderNo = "";
            $scope.PL_Remarks = ""; 
            $("#txtDate").val("");
            $("#drporderUsers").val("").trigger("chosen:updated"); 
            var Rowhtml = "<tr><td><select class='form-control' id='drpProduct' onchange='ProductChange(this);'><option value=''>-Select-</option><option ng-repeat='product in products' value='{{ product.P_ID }}'>{{ product.P_ArticleNo }}</option ></select></td><td><input type='text' id='txtProductName' class='form-control' readonly='readonly' /><td><input type='text' id='txtpalletno' class='form-control' /></td><td><input type='text' id='txtPalletNo' class='form-control'/></td><td><input type='text' id='txtDesignNo' class='form-control'/></td><td><input type='text' id='txtNoofpeices' class='form-control' /></td><td><input type='text' id='txtTotalMeters' class='form-control' /></td><td><input type='text' id='txtNwtinKGS' class='form-control' /></td><td><input type='text' id='txtGwtinKGS' class='form-control' /></td><td><a style='padding: 5px;' ng-click='addnewrow($event)'><i class='fa fa-plus'></i></a><a style='padding: 5px;color:red' ng-click='deleterow($event)'><i class='fa fa-trash'></i></a></td></tr>";
            var temp = $compile(Rowhtml)($scope);
            angular.element(document.getElementById('storedetailsbody')).html("");
            angular.element(document.getElementById('storedetailsbody')).append(temp);
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }
    function validate() {
        debugger;
        var tr = $("#storedetailsbody").find("tr");
        var txt = "";
        for (i = 0; i < tr.length; i++) {
            var td = $(tr[i]).find("td");
            var product = $(td[0]).find("select").val();
            var palletno = $(td[3]).find("input").val();
            var rate = $(td[4]).find("input").val();
            if (product == "") {
                message = "Enter Product Name at row:" + (i + 1);
                toastr["error"](message, "Notification");
                return "";
            } 
            else {
                txt = txt + $(td[0]).find("select").val() + ",";
                txt = txt + $(td[0]).find("select option:selected").text() + ",";
                txt = txt + $(td[1]).find("input").val() + ",";
                txt = txt + $(td[2]).find("input").val() + ",";
                txt = txt + $(td[3]).find("input").val() + ",";
                txt = txt + $(td[4]).find("input").val() + ",";
                txt = txt + $(td[5]).find("input").val() + ",";
                txt = txt + $(td[6]).find("input").val() + ",";
                txt = txt + $(td[7]).find("input").val() + ",";
                txt = txt + $(td[8]).find("input").val() + "|"; 
            }
        }
        return txt;
    }
    $scope.SubmitClick = function () {
        debugger;
        var txt = validate();
        var date = $("#txtDate").val();
        debugger;
        var ords = "";
        try {
            ords = $scope.SM_Store_User.join();
        }
        catch (ex) {
            ords = $scope.SM_Store_User;
        }
        if (txt != "") {
            var post = $http({
                method: "POST",
                url: "/ET_Sales_PackingList/ET_Master_Store_Add",
                dataType: 'json',
                data: {
                    PL_ID: $scope.PL_ID,
                    PL_Code: $scope.PL_Code,
                    PL_Date: date,
                    PL_OrderNo: ords,
                    PL_Remarks: $scope.PL_Remarks, 
                    EnquiryDetails: txt
                },
                headers: { "Content-Type": "application/json" }
            });

            post.success(function (data, status) {

                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else if (data.indexOf("Validation") > -1) {
                    toastr["error"](data, "Notification");
                }
                else if (data.indexOf("Success") > -1) {
                    var res = data.split(':');
                    if ($scope.PL_ID == 0) {
                        message = 'Record Inserted Successfully With Code : '+res[1];
                        toastr["success"](message, "Notification");
                    }
                    else {
                        message = 'Record Updated Successfully With Code : ' + res[1];
                        toastr["success"](message, "Notification");
                    }
                    $scope.createnew();
                }
                else {
                    message = "Failed to do this operation.";
                    toastr["error"](message, "Notification");
                }
            });

            post.error(function (data, status) {
                $window.alert(data.Message);
            });
        }

    }
    $scope.editRecords = function (a) {
        debugger;
        a = parseInt(a);
        if ($scope.Isedit) {
            var post = $http({
                method: "POST",
                url: "/ET_Sales_PackingList/ET_Master_Store_Update_GetbyID",
                dataType: 'json',
                data: {
                    id: a
                },
                headers: { "Content-Type": "application/json" }
            });
            post.success(function (data, status) {
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    var StoreByID = JSON.parse(data);
                    $("#formSubmit").removeAttr('disabled');
                    $("#div_View").css("display", "none");
                    $("#div_Edit").css("display", "block");
                    $scope.submittext = "Update";
                    $scope.createedit = "Edit";
                    $("#span_tabtext").html("Edit");
                    debugger;
                    $scope.PL_ID = StoreByID.PL_ID;
                    $scope.PL_Code = StoreByID.PL_Code; 
                    $scope.SM_Store_User = StoreByID.PL_OrderNo.split(',');
                    $scope.PL_Remarks = StoreByID.PL_Remarks;  

                    var Quotationdate = new Date(parseInt(StoreByID.PL_Date.substr(6)));
                    var QDT = ("0" + Quotationdate.getDate()).slice(-2) + "-" + ("0" + (Quotationdate.getMonth() + 1)).slice(-2) + "-" + Quotationdate.getFullYear();
                    $("#txtDate").val(QDT);
                    $("#drporderUsers").val($scope.SM_Store_User).trigger("chosen:updated");
                    EnquiryDetails(StoreByID.PL_ID);
                }
            });

            post.error(function (data, status) {
                $window.alert(data.Message);
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }
    function EnquiryDetails(e) {
        var id = e;
        $http({
            method: 'POST',
            url: '/ET_Sales_PackingList/ET_Master_Store_Details_Load',
            data: {
                id: id,
            },
        }).success(function (data) {
            debugger;
            var enquirydata = JSON.parse(data)
            var i = enquirydata.length;
            var j = 0;
            angular.element(document.getElementById('storedetailsbody')).html("");
            while (i != 0) {
                var Rowhtml = "<tr><td><select class='form-control' id='drpProduct' onchange='ProductChange(this);'><option value=''>-Select-</option><option ng-repeat='product in products' value='{{ product.P_ID }}'>{{ product.P_ArticleNo }}</option ></select></td><td><input type='text' id='txtProductName' class='form-control' readonly='readonly' /><td><input type='text' id='txtpalletno' class='form-control' /></td><td><input type='text' id='txtPalletNo' class='form-control'/></td><td><input type='text' id='txtDesignNo' class='form-control'/></td><td><input type='text' id='txtNoofpeices' class='form-control' /></td><td><input type='text' id='txtTotalMeters' class='form-control' /></td><td><input type='text' id='txtNwtinKGS' class='form-control' /></td><td><input type='text' id='txtGwtinKGS' class='form-control' /></td><td><a style='padding: 5px;' ng-click='addnewrow($event)'><i class='fa fa-plus'></i></a><a style='padding: 5px;color:red' ng-click='deleterow($event)'><i class='fa fa-trash'></i></a></td></tr>";
                var temp = $compile(Rowhtml)($scope);
                angular.element(document.getElementById('storedetailsbody')).append(temp);
                i--;
                j++;
            }
            $scope.enquirydata1 = enquirydata;
        });
    }
    $scope.Restoredeleterecords = function (a, $event, b) {

        var res = false;
        if (b)
            res = $scope.Isdelete;
        else
            res = $scope.Isrestore
        if (res) {
            var post = $http({
                method: "POST",
                url: "/ET_Sales_PackingList/ET_Master_Store_RestoreDelete",
                dataType: 'json',
                data: {
                    id: a,
                    type: b
                },
                headers: { "Content-Type": "application/json" }
            });
            post.success(function (data, status) {
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    if (data == "Success") {
                        $($event.target.parentElement.parentElement.parentElement).fadeOut(800, function () { $(this).remove(); });
                        if (b) {
                            message = "Record Deleted Successfully.";
                        }
                        else {
                            message = "Record Restored Successfully.";
                        }

                        toastr["success"](message, "Notification");
                    }
                    else {
                        message = "Failed to do this operation.";
                        toastr["error"](message, "Notification");
                    }
                }
            });
            post.error(function (data, status) {
                $window.alert(data.Message);
            });
        }
    }
    $scope.ViewRecords = function (a) {
        debugger;
        a = parseInt(a);
        if ($scope.Isview) {
            var post = $http({
                method: "POST",
                url: "/ET_Sales_PackingList/ET_Master_Store_View",
                dataType: 'html',
                data: {
                    id: a
                },
                headers: { "Content-Type": "application/json" }
            });
            post.success(function (data, status) {
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    $('#viewpopup').html(data);
                    $("#btnviewpopup").trigger("click");
                    //var privilage = JSON.parse(data);
                    //$scope.txtMaterialCodeView = privilage[0].MATERIAL_CODE;
                    //$scope.txtMaterialnameView = privilage[0].MATERIAL_NAME;
                    //$scope.txtDescriptionView = privilage[0].MATERIAL_DESCRIPTION;
                    //if (privilage[0].COTTON_PER == 1)
                    //    $scope.chkCottonView = true;
                    //else
                    //    $scope.chkCottonView = false;
                    //$rootScope.$emit("CallParentMethod", { a: $scope.txtMaterialCodeView, b: $scope.txtMaterialnameView, c: $scope.txtDescriptionView, d: $scope.chkCottonView });

                }
            });

            post.error(function (data, status) {
                $window.alert(data.Message);
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }
    $scope.$watch("storeuserlist", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () { $("#drporderUsers").val($scope.SM_Store_User).trigger("chosen:updated"); }, 100);
        }
    });
    
    $scope.$watch("storelist", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () {
                dynamicDataTable('#advancedusage', '#tableTools', '#colVis');
            }, 5);
        }
    });
    $scope.$watch("storerestorelist", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () {
                dynamicDataTable('#advancedusageRestore', '#tableToolsRestore', '#colVisRestore');
            }, 5);
        }
    });
    $scope.PrintRecords = function (a) {

        a = parseInt(a);
        if ($scope.Isview) {
            var post = $http({
                method: "POST",
                url: "/ET_Sales_PackingList/ET_Master_Quotation_Print",
                dataType: 'html',
                data: {
                    id: a
                },
                headers: { "Content-Type": "application/json" }
            });
            post.success(function (data, status) {
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {

                    $('#div_PrintContent').html(data);
                    $("#div_View").css("display", "none");
                    $("#div_Restore").css("display", "none");
                    $("#div_Edit").css("display", "none");
                    $("#div_Print").css("display", "block");
                }
            });

            post.error(function (data, status) {
                $window.alert(data.Message);
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }
    $scope.$watch("enquirydata1", function (value) {
        var val = value || null;
        if (val) {
            var enquirydata = $scope.enquirydata1;
            setTimeout(function () {
                debugger;
                var tr = $("#storedetailsbody").find("tr");
                for (var i = 0; i < tr.length; i++) {
                    var td = tr[i].cells;
                    $(td[0]).find("select").val(enquirydata[i].productid);
                    $(td[1]).find("input").val(enquirydata[i].name);
                    $(td[2]).find("input").val(enquirydata[i].palletno);
                    $(td[3]).find("input").val(enquirydata[i].designno);
                    $(td[4]).find("input").val(enquirydata[i].noofpeices);
                    $(td[5]).find("input").val(enquirydata[i].totalmeters);
                    $(td[6]).find("input").val(enquirydata[i].nwtinkgs);
                    $(td[7]).find("input").val(enquirydata[i].gwtinkgs);
                    $(td[8]).find("input").val(enquirydata[i].individualpiecelemgth);
                }
            }, 1000);
        }
    });

});