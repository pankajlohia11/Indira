app1.controller("AC_ScheduleCtrl", function ($scope, $http, $window, $compile) {
    GetPrivilages();
    GetScheduleList();
    GetSalesPersonList();
    
    function GetPrivilages() {
        $scope.SH_Type = "";
        var getprivilages = $http.get("/ET_Sales_Shedule/GetPrivilages");
        getprivilages.then(function (privilage1) {
            var privilage = JSON.parse(privilage1.data);
            if (privilage.length != 0) {
                $scope.Iscreate = privilage[0].IS_ADD;
                $scope.Isedit = privilage[0].IS_EDIT;
                $scope.Isdelete = privilage[0].IS_DELETE;
                $scope.Isrestore = privilage[0].IS_FULLCONTROL;
                $scope.Isview = privilage[0].IS_VIEW;
            }
            else {
                $scope.Iscreate = true;
                $scope.Isedit = true;
                $scope.Isdelete = true;
                $scope.Isrestore = true;
                $scope.Isview = true;
            }
        }, function () {
            alert('Privilages Not Found');
        }
        );
    }
    function GetScheduleList() {
        var getquotationlist = $http.get("/ET_Sales_Shedule/GetScheduleList",
            {
                params: { delete: false }
            });
        getquotationlist.then(function (quotationlist) {
            var res = JSON.parse(quotationlist.data);
            $scope.schedulelist = res;
        }, function () {
            alert("Schedule List Found");
        });
    }
    function GetQuotationRestoreList() {
        var getquotationrestorelist = $http.get("/ET_Sales_Shedule/GetScheduleList",
            {
                params: { delete: true }
            });
        getquotationrestorelist.then(function (quotationrestorelist) {
            var res = JSON.parse(quotationrestorelist.data);
            $scope.schedulerestorelist = res;
        }, function () {
            alert("Quotation Restore List Found");
        });
    }
    function GetOrders() {
        if ($scope.SH_Type != "") {
            var getorderlist = $http.get("/ET_Sales_Shedule/GetOrders",
                {
                    params: { type: $scope.SH_Type }
                });
            getorderlist.then(function (orderlist) {
                var res = JSON.parse(orderlist.data);
                $scope.orders = res;
            }, function () {
                alert("Customer Not Found");
            });
        }
        else
        {
            $scope.orders = {};
        }
    }
    function GetSalesPersonList() {
        var getsalespersonlist = $http.get("/ET_Sales_Shedule/GetSalesPerson");
        getsalespersonlist.then(function (salespersonlist) {
            var res = JSON.parse(salespersonlist.data);
            $scope.salespersons = res;
            $scope.SH_SalesPerson = "";
        }, function () {
            alert('Data not found');
        });
    }
    $scope.OrderTypeChange = function () {
        $scope.SH_OrderID = "";
        GetOrders();
    }
    $scope.OrderChange = function () {
            var post = $http({
                method: "POST",
                url: "/ET_Sales_Shedule/ET_Sales_ScheduleDetails",
                dataType: 'html',
                data: {
                    id: $scope.SH_OrderID,
                    type: $scope.submittext,
                    code: $scope.SH_Code
                },
                headers: { "Content-Type": "application/json" }
            });
            post.success(function (data, status) {
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    $('#scheduledetailsbody').html(data);
                }
            });

            post.error(function (data, status) {
                $window.alert(data.Message);
            });
    }
    $scope.SalesPersonChange = function () {
    }
    $scope.showRecords = function () {
        $("#advancedusage").dataTable().fnDestroy();
        GetScheduleList();
        $("#div_View").css("display", "block");
        $("#div_Restore").css("display", "none");
        $("#div_Edit").css("display", "none");
    }
    $scope.restoreRecords = function () {
        $("#advancedusageRestore").dataTable().fnDestroy();
        GetQuotationRestoreList();
        $("#div_View").css("display", "none");
        $("#div_Restore").css("display", "block");
        $("#div_Edit").css("display", "none");
    }
    $scope.createnew = function () {
        if ($scope.Iscreate) {
            $("#formSubmit").attr('disabled', "disabled");
            $("#div_View").css("display", "none");
            $("#div_Edit").css("display", "block");
            $scope.submittext = "Submit";
            $scope.createedit = "Create";
            $scope.SH_ID = "0";
            $scope.SH_Code = "";
            $scope.SH_Type = "";
            $scope.SH_OrderID = "";
            $scope.SH_SalesPerson = "";
            $("#drpType").val("").trigger("chosen:updated");
            $("#drpOrder").val("").trigger("chosen:updated");
            $("#drpSalesPerson").val("").trigger("chosen:updated");
            $scope.orders = {};
            $("#scheduledetailsbody").html("");
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }
    function validate() {
        var tr = $("#scheduledetailsbody").find("tr");
        var txt = "";
        for (i = 0; i < tr.length; i++) {
            var td = $(tr[i]).find("td");
            var scheduledate = $(td[4]).find("input").val();
            var availableqty = $(td[6]).find("input").val();
            var qty = $(td[7]).find("input").val();
            if (scheduledate == "") {
                message = "Enter Schedule Date at row:" + (i + 1);
                toastr["error"](message, "Notification");
                return "";
            } else if (qty == "") {
                message = "Enter Quantity at row:" + (i + 1);
                toastr["error"](message, "Notification");
                return "";
            } else if (parseFloat(qty) > parseFloat(availableqty)) {
                message = "Quantity cannot be more than Available Quantity at row:" + (i + 1);
                toastr["error"](message, "Notification");
                return "";
            }
            else {
                txt = txt + $(td[0]).find("input").val() + ",";
                txt = txt + $(td[1]).find("input").val() + ",";
                txt = txt + $(td[4]).find("input").val() + ",";
                txt = txt + $(td[5]).find("input").val() + ",";
                txt = txt + $(td[6]).find("input").val() + ",";
                txt = txt + $(td[7]).find("input").val() + "|";
            }
        }
        return txt;
    }
    $scope.SubmitClick = function () {
        debugger;
        var txt = validate();
        debugger;
        if (txt != "") {
            var post = $http({
                method: "POST",
                url: "/ET_Sales_Shedule/ET_Sales_Schedule_Add",
                dataType: 'json',
                data: {
                    SH_ID: $scope.SH_ID,
                    SH_Code: $scope.SH_Code,
                    SH_Type: $scope.SH_Type,
                    SH_OrderID: $scope.SH_OrderID,
                    ScheduleDetails: txt,
                    SH_SalesPerson: $scope.SH_SalesPerson
                },
                headers: { "Content-Type": "application/json" }
            });

            post.success(function (data, status) {

                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else if (data.indexOf("Validation") > -1) {
                    toastr["error"](data, "Notification");
                }
                else if (data == "Success") {
                    if ($scope.SH_ID == 0) {
                        message = 'Record Inserted Successfully.';
                        toastr["success"](message, "Notification");
                    }
                    else {
                        message = 'Record Updated Successfully.';
                        toastr["success"](message, "Notification");
                    }
                    $scope.createnew();
                }
                else {
                    message = "Failed to do this operation.";
                    toastr["error"](message, "Notification");
                }
            });

            post.error(function (data, status) {
                $window.alert(data.Message);
            });
        }

    }
    $scope.editRecords = function (a) {
        a = parseInt(a);
        if ($scope.Isedit) {
            var post = $http({
                method: "POST",
                url: "/ET_Sales_Shedule/ET_Sales_Schedule_Update_GetbyID",
                dataType: 'json',
                data: {
                    id: a
                },
                headers: { "Content-Type": "application/json" }
            });
            post.success(function (data, status) {
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    var QuotationByID = JSON.parse(data);
                    $("#formSubmit").removeAttr('disabled');
                    $("#div_View").css("display", "none");
                    $("#div_Edit").css("display", "block");
                    $scope.submittext = "Update";
                    $scope.createedit = "Edit";
                    $("#span_tabtext").html("Edit");
                    debugger;
                    $scope.SH_ID = QuotationByID.SH_ID;
                    $scope.SH_Code = QuotationByID.SH_Code;
                    $scope.SH_Type = QuotationByID.SH_Type;
                    $scope.SH_OrderID = QuotationByID.SH_OrderID;
                    $scope.SH_SalesPerson = QuotationByID.SH_SalesPerson;
                    $("#drpType").val(QuotationByID.SH_Type).trigger("chosen:updated");
                    $("#drpSalesPerson").val(QuotationByID.SH_SalesPerson).trigger("chosen:updated");
                    $("#drpOrder").val(QuotationByID.SH_OrderQuantity).trigger("chosen:updated");
                    GetOrders();
                    $scope.OrderChange();
                }
            });

            post.error(function (data, status) {
                $window.alert(data.Message);
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }
    function ScheduleDetails(e) {
        var id = e;
        $http({
            method: 'POST',
            url: '/ET_Sales_Shedule/ET_Sales_ScheduleDetails',
            data: {
                id: id,
                type: $scope.submittext,
                code: $scope.SH_Code
            },
        }).success(function (data) {
            debugger;
            var enquirydata = JSON.parse(data)
            angular.element(document.getElementById('quotationdetailsbody')).html("");
        });
    }
    $scope.Restoredeleterecords = function (a, $event, b) {
        debugger;
        var res = false;
        if (b)
            res = $scope.Isdelete;
        else
            res = $scope.Isrestore
        if (res) {
            var post = $http({
                method: "POST",
                url: "/ET_Sales_Shedule/ET_Sales_Schedule_RestoreDelete",
                dataType: 'json',
                data: {
                    id: a,
                    type: b
                },
                headers: { "Content-Type": "application/json" }
            });
            post.success(function (data, status) {
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    if (data == "Success") {
                        $($event.target.parentElement.parentElement.parentElement).fadeOut(800, function () { $(this).remove(); });
                        if (b) {
                            message = "Record Deleted Successfully.";
                        }
                        else {
                            message = "Record Restored Successfully.";
                        }

                        toastr["success"](message, "Notification");
                    }
                    else {
                        message = "Failed to do this operation.";
                        toastr["error"](message, "Notification");
                    }
                }
            });
            post.error(function (data, status) {
                $window.alert(data.Message);
            });
        }
    }
    $scope.ViewRecords = function (a) {
        a = parseInt(a);
        if ($scope.Isview) {
            var post = $http({
                method: "POST",
                url: "/ET_Sales_Shedule/ET_Sales_Schedule_View",
                dataType: 'html',
                data: {
                    id: a
                },
                headers: { "Content-Type": "application/json" }
            });
            post.success(function (data, status) {
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    $('#viewpopup').html(data);
                    $("#btnviewpopup").trigger("click");
                    //var privilage = JSON.parse(data);
                    //$scope.txtMaterialCodeView = privilage[0].MATERIAL_CODE;
                    //$scope.txtMaterialnameView = privilage[0].MATERIAL_NAME;
                    //$scope.txtDescriptionView = privilage[0].MATERIAL_DESCRIPTION;
                    //if (privilage[0].COTTON_PER == 1)
                    //    $scope.chkCottonView = true;
                    //else
                    //    $scope.chkCottonView = false;
                    //$rootScope.$emit("CallParentMethod", { a: $scope.txtMaterialCodeView, b: $scope.txtMaterialnameView, c: $scope.txtDescriptionView, d: $scope.chkCottonView });

                }
            });

            post.error(function (data, status) {
                $window.alert(data.Message);
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }
    $scope.$watch("salespersons", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () { $("#drpSalesPerson").val($scope.SH_SalesPerson).trigger("chosen:updated"); }, 100);
        }
    });
    $scope.$watch("orders", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () { $("#drpOrder").val($scope.SH_OrderID).trigger("chosen:updated"); }, 100);
        }
    });
    $scope.$watch("schedulelist", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () {
                dynamicDataTable('#advancedusage', '#tableTools', '#colVis');
            }, 5);
        }
    });
    $scope.$watch("schedulerestorelist", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () {
                dynamicDataTable('#advancedusageRestore', '#tableToolsRestore', '#colVisRestore');
            }, 5);
        }
    });

});