@model IEnumerable<BusinessEntity.EntityModels.Tbl_Sales_Target>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--
This Form is used to set the sales target Organization wise.
    Author=RajKumar
    Created Date : 4th April 2018
    Updated Date : 18th April 2018
    Updated By   : Manoj Arumugam
    Operation={View,Restore,Create,Edit,Delete}
-->
<script type="text/javascript">
    /* BEGIN EXTERNAL SOURCE */
    /* This function is used for window onload */
    window.onload = function () {
        dynamicDataTable('#advancedusage', '#tableTools', '#colVis');
        dynamicDataTable('#advancedusageRestore', '#tableToolsRestore', '#colVisRestore');
    };

        /* This function is used for displaying View List page and hide restore and edit page */
    function showRecords() {
        $("#div_View").css("display", "block");
        $("#div_Restore").css("display", "none");
        $("#div_Edit").css("display", "none");

    }

     /* This function is used for displaying edit page and hide view and restore page */
    function createRecords(f) {
        $("#UserID").val("");
        $("#txtUsercode").val("");
        $("#txtUserName").val("");
        $("#txtDisplayName").val("");
        $("#txtPassword").val("");
        $("#txtConfirmPassword").val("");
        $("#drpRole").val("").trigger("chosen:updated");
        $("#txtStreet").val("");
        $("#drpCountry").val("").trigger("chosen:updated");
        $("#drpState").val("").trigger("chosen:updated");
        $("#drpCity").val("").trigger("chosen:updated");
        $("#txtZipCode").val("");
        $("#txtEmail").val("");
        $("#txtFax").val("");
        $("#txtPhone").val("");
        $("#txtMobile").val("");
        $("#txtRemarks").val("");

        if ($(f).attr("id").toString().indexOf("CreateYes") > -1) {


            $("#div_View").css("display", "none");
            $("#div_Edit").css("display", "block");
            $("#formSubmit").html("Submit");
            $("#span_tabtext").html("Add");

        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    };

    //Edit Row Data and Fetch value from ET_Admin_User_Update_Get
    function editRecords(e,f) {
        if ($(f).attr("id").toString().indexOf("EditYes") > -1) {
            var id = e;
            $.ajax({
                type: "GET",
                url: '@Url.Action("ET_Admin_User_Update_Get", "ET_Admin_User_Master")',
                data: { id: id },
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {

                    if (result.indexOf("ERR") > -1) {
                        $("#spanErrMessage1").html(result);
                        $("#spanErrMessage2").html(result);
                        if ($("#exceptionmessage").length)
                            $("#exceptionmessage").trigger("click");
                    }
                    else {
                        var res = JSON.parse(result);
                        $("#div_View").css("display", "none");
                        $("#div_Edit").css("display", "block");
                        $("#formSubmit").html("Update");
                        $("#span_tabtext").html("Edit");

                        $("#UserID").val(res.USER_ID);
                        $("#txtUsercode").val(res.USER_CODE);
                        $("#txtUserName").val(res.USER_NAME);
                        $("#txtDisplayName").val(res.DISPLAY_NAME);
                        $("#txtPassword").val(res.USER_PASSWORD);
                        $("#txtConfirmPassword").val(res.USER_PASSWORD);
                        $("#drpRole").val(res.ROLE_ID).trigger("chosen:updated");
                        $("#txtStreet").val(res.USER_STREET);
                        $("#drpCountry").val(res.USER_COUNTRY).trigger("chosen:updated");
                        State(res.USER_STATE, res.USER_CITY);
                        $("#txtZipCode").val(res.USER_ZIP);
                        $("#txtEmail").val(res.USER_EMAIL);
                        $("#txtFax").val(res.USER_FAX);
                        $("#txtPhone").val(res.USER_PHONE);
                        $("#txtMobile").val(res.USER_MOBILE);
                        $("#txtRemarks").val(res.USER_REMARKS);
                    }
                },
                error: function (response) {
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }

    };
    //Delete Row Access Check
    function deleteRecord(e, f) {
        if ($(f).attr("id").toString().indexOf("DeleteYes") > -1) {
            alertmessage(e, $(f).attr("id").toString());
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }
    // Delete Row confirm If Yes  Delete the data using ET_Admin_User_Delete
    function deleteRecordConfirm(e,f) {
        var id = e;
        $.ajax({
            type: "GET",
            url: '@Url.Action("ET_Admin_User_Delete", "ET_Admin_User_Master")',
            data: { id: id },
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(result);
                    $("#spanErrMessage2").html(result);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    if (result == "Success") {
                        message = 'Record Deleted Successfully. You can retrive it from Restore page';
                        toastr["success"](message, "Notification");
                        var ctrl = "#" + f;
                        $(ctrl).parent().parent().fadeOut(800, function () { $(this).remove(); })
                    }
                    else {
                        message = 'Failed To Delete';
                        toastr["error"](message, "Notification");
                    }
                }
            },
            error: function (response) {
                if ($("#exceptionmessage").length)
                    $("#exceptionmessage").trigger("click");
            }
        });
    };

    // Insert/ Update Row using ajax ET_Admin_UserMaster_Add
    function InsertRecords() {
        var Usercode = $("#txtUsercode").val();
        var UserName = $("#txtUserName").val();
        var DisplayName = $("#txtDisplayName").val();
        var Password = $("#txtPassword").val();
        var Role      = $("#drpRole").val();
        var Street = $("#txtStreet").val();
        var Country = $("#drpCountry").val();
        var State = $("#drpState").val();
        var City = $("#drpCity").val();
        var ZipCode = $("#txtZipCode").val();
        var Email = $("#txtEmail").val();
        var Fax = $("#txtFax").val();
        var Phone = $("#txtPhone").val();
        var Mobile = $("#txtMobile").val();
        var Remarks = $("#txtRemarks").val();
        var UserID = $("#UserID").val();
        if (UserID != 0) {
            UserID = $("#UserID").val();
        }
        else {
            UserID = "0";
        }
            $.ajax({
                type: "GET",
                url: '@Url.Action("ET_Admin_UserMaster_Add", "ET_Admin_User_Master")',
                data: {
                    UserID: UserID,
                    txtUsercode: Usercode,
                    txtUserName: UserName,
                    txtDisplayName: DisplayName,
                    txtPassword: Password,
                    drpRole: Role,
                    txtStreet: Street,
                    drpCountry: Country,
                    drpState: State,
                    drpCity: City,
                    txtZipCode: ZipCode,
                    txtEmail: Email,
                    txtFax: Fax,
                    txtPhone: Phone,
                    txtMobile: Mobile,
                    txtRemarks: Remarks
                },
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.indexOf("ERR") > -1) {
                        $("#spanErrMessage1").html(result);
                        $("#spanErrMessage2").html(result);
                        if ($("#exceptionmessage").length)
                            $("#exceptionmessage").trigger("click");
                    }
                    else {
                        if (result == "Success") {
                            //Clearing Data after update or Insert
                            $("#UserID").val("");
                            $("#txtUsercode").val("");
                            $("#txtUserName").val("");
                            $("#txtDisplayName").val("");
                            $("#txtPassword").val("");
                            $("#txtConfirmPassword").val("");
                            $("#drpRole").val("").trigger("chosen:updated");
                            $("#txtStreet").val("");
                            $("#drpCountry").val("").trigger("chosen:updated");
                            $("#drpState").val("").trigger("chosen:updated");
                            $("#drpCity").val("").trigger("chosen:updated");
                            $("#txtZipCode").val("");
                            $("#txtEmail").val("");
                            $("#txtFax").val("");
                            $("#txtPhone").val("");
                            $("#txtMobile").val("");
                            $("#txtRemarks").val("");

                            $("#formSubmit").html("Submit");
                            $("#span_tabtext").html("Add");

                            if (UserID == 0) {
                                message = 'Record Inserted Successfully.';
                                toastr["success"](message, "Notification");
                            }
                            else {
                                message = 'Record Updated Successfully.';
                                toastr["success"](message, "Notification");
                            }
                        }
                        else if (result == "Failed") {

                            message = 'Failed to do this operation.';
                            toastr["error"](message, "Notification");
                        }
                        else if (result.indexOf("Validation") > -1) {
                            toastr["error"](result, "Notification");
                        }
                    }
                },
                error: function (response) {
                    alert("");

                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
            });
    };

    //Restore View displaying from partial view using ET_Admin_User_Restore
    function restoreRecords(f) {
        if ($(f).attr("id").toString().indexOf("RestoreYes") > -1) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("ET_Admin_User_Restore", "ET_Admin_User_Master")',
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                success: function (result, textStatus, XMLHttpRequest) {
                    if (result.indexOf("ERR") > -1) {
                        $("#spanErrMessage1").html(result);
                        $("#spanErrMessage2").html(result);
                        if ($("#exceptionmessage").length)
                            $("#exceptionmessage").trigger("click");
                    }
                    else {
                        $("#div_View").css("display", "none");
                        $("#div_Restore").css("display", "block");

                        $('#restorediv').html(result);
                        dynamicDataTable('#advancedusageRestore', '#tableToolsRestore', '#colVisRestore');
                    }
                },
                error: function (response) {
                    alert('error');
                }
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }

    };

    //Restore Data using ET_Admin_User_Restore_Insert function
    function Restoredeleterecords(id,f) {
        var id = id;
            $.ajax({
                type: "GET",
                url: '@Url.Action("ET_Admin_User_Restore_Insert", "ET_Admin_User_Master")',
                data: {
                    id: id
                },
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.indexOf("ERR") > -1) {
                        $("#spanErrMessage1").html(result);
                        $("#spanErrMessage2").html(result);
                        if ($("#exceptionmessage").length)
                            $("#exceptionmessage").trigger("click");
                    }
                    else {
                        if (result == "Success") {
                            $("#div_View").css("display", "none");
                            $("#div_Restore").css("display", "block");

                            message = 'Record Restored Successfully';
                            toastr["success"](message, "Notification");
                            $(f).parent().parent().fadeOut(800, function () { $(this).remove(); })
                        }
                        else if (result == "Success") {
                            message = 'Failed to do this operation.';
                            toastr["error"](message, "Notification");
                        }
                    }
                },
                error: function (response) {
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
            });
    };

    //View records in popup using ET_Admin_User_View function
     function ViewRecords(e,f) {
        if ($(f).attr("id").toString().indexOf("ViewYes") > -1) {
            var id = e;
            $.ajax({
                type: "GET",
                url: '@Url.Action("ET_Admin_User_View", "ET_Admin_User_Master")',
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                data: { id: id },
                success: function (result, textStatus, XMLHttpRequest) {
                    if (result.indexOf("ERR") > -1) {
                        $("#spanErrMessage1").html(result);
                        $("#spanErrMessage2").html(result);
                        if ($("#exceptionmessage").length)
                            $("#exceptionmessage").trigger("click");
                    }
                    else {
                        $('#viewpopup').html(result);
                        $("#btnviewpopup").trigger("click");
                    }
                },
                error: function (response) {
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }

    };

    // Bind Employees for Set target / Set selected value 
    function BindRow_Employees(f) {
        var id = ($("#drpSalesOrganization").val());
         $.ajax({
                type: "GET",
                url: '@Url.Action("BindRow_Employees", "ET_Admin_SalesTarget")',
                contentType: "application/json;charset=utf-8",
                dataType: "html",
                data: {id : id },
            success: function (result) {
                if (result.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(result);
                    $("#spanErrMessage2").html(result);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    $('#divTarget').html(result);
                }
                },
                error: function (response) {
                    toastr["error"]("Target Employees Not Loading", "Notification");
                }
            });
    };
    
</script>
<!-- ====================================================
           ================= CONTENT ===============================
           ===================================================== -->
<!-- This section is used for displaying link menu on header bar-->
<section id="content">

    <div class="page page-shop-single-order">

        <div class="pageheader">

            <h2>Sales Target<span>@*You can place subtitle here*@</span></h2>

            <div class="page-bar">

                <ul class="page-breadcrumb">
                    <li>
                        <a href="../Home/Index"><i class="fa fa-home"></i> Indra</a>
                    </li>
                    <li>
                        <a href="#">Admin</a>
                    </li>
                    <li>
                        <a href="#">Sales Target</a>
                    </li>
                </ul>

            </div>

        </div>

        <div class="row">
            <div class="col-md-12">
                <section class="tile" id="div_View">
                    <!--[div_view] All view list contents datas will be written here-->
                    <!-- tile header -->
                    <div class="tile-header dvd-btm">
                        <h1 class="custom-font"><strong>Sales Target</strong> List</h1>
                        <ul class="controls">
                            <!-- function createRecords() is used for add records. Once click this button it will navigate to Create page.-->
                            <li style="padding:5px">
                                <a tabindex="0" onclick="createRecords(this);" id="@ViewBag.Create">
                                    <span class="btn btn-slategray btn-xs mb-10">
                                        <i class="fa fa-plus"></i>
                                        Add
                                    </span>
                                </a>
                            </li>
                            <!-- function restoreRecords() is used for displaying Deleted records. Once click on this button it will navigate to restore page.-->
                            <li style="padding:5px"><a tabindex="0" id="@ViewBag.Restore" onclick="restoreRecords(this);"><span class="btn btn-drank btn-xs mb-10"><i class="fa fa-undo"></i> Restore</span></a></li>
                        </ul>
                    </div>
                    <!-- /tile header -->
                    <!-- tile body -->
                    <div class="tile-body">
                        <div class="row">
                            <div class="col-md-6"><div id="tableTools"></div></div>
                            <div class="col-md-6"><div id="colVis"></div></div>
                        </div>
                        <!-- Table created for displaying View content-->
                        <table class="table table-custom" id="advancedusage">
                            <thead>
                                <tr>
                                    <th>Sales Target Code</th>
                                    <th>Sales Organization</th>
                                    <th>Sales Person</th>
                                    <th>Calendar Year</th>
                                    <th>Action</th>
                                </tr>

                            </thead>
                            <tbody>
                                <tr>
                                    <th>TRG0000001</th>
                                    <th>Taramani Branch</th>
                                    <th>Sathish</th>
                                    <th>2017-2018</th>
                                    <th>Action</th>
                                </tr>
                                <tr>
                                    <th>TRG0000002</th>
                                    <th>Perungudi Branch</th>
                                    <th>Rajesh</th>
                                    <th>2017-2018</th>
                                    <th>Action</th>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <!-- /tile body -->

                </section>
                <!--The user can have a option to create and edit records-->
                <section class="tile" id="div_Edit" style="display:none">

                    <!-- tile header -->
                    <div class="tile-header dvd-btm">
                        <h1 class="custom-font"><strong><span id="span_tabtext"></span></strong> Sales Target</h1>
                        <ul class="controls">
                            <li style="padding:5px">
                                <!-- function showRecords() is used for return back to view from the current page.ie it actually hide the other pages except view -->
                                <a tabindex="0" onclick="showRecords();">
                                    <span class="btn btn-hotpink btn-xs mb-10">
                                        <i class="fa fa-arrow-left"></i> Back
                                    </span>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <!-- /tile header -->
                    <!-- tile body -->
                    <div class="tile-body">

                        <div name="form1" role="form" id="form1" data-parsley-validate>
                            <div class="row">
                                <div class="form-group col-md-6">
                                    <label for="Sales Target Code">Sales Target Code</label>
                                    <input type="text" name="TargetID" id="TargetID" class="form-control hidden">
                                    <input type="text" name="txtTargetcode" minlength="5" maxlength="10" disabled="@ViewBag.AutoManual" id="txtTargetcode" class="form-control" data-parsley-trigger="change" @ViewBag.Required>
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="Financial Year">Financial Year*</label>
                                    @Html.DropDownList("Years", new SelectList(ViewBag.Years), "--Select--", new { @class = "form-control chosen-select", @id = "drpFinYear" })
                                </div>

                            </div>
                            <div class="row">
                                <div class="form-group col-md-6">
                                    <label for="Sales Organization">Sales Organization*</label>
                                    @Html.DropDownList("Organization", new SelectList(ViewBag.Organization, "ORG_ID", "ORG_NAME"), "--Select--", new { @class = "form-control chosen-select", onchange = "BindRow_Employees()" , @id = "drpSalesOrganization" })
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="Set Target">Set Target*</label>
                                    <input type="text" class="form-control" name="txtTarget" id="txtTarget" required  data-parsley-trigger="change" data-parsley-type="digits">
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-6">
                                    <label for="Pending Target">Pending Target</label>
                                    <input type="text" class="form-control" disabled name="txtPendingTarget" id="txtPendingTarget" />
                                </div>
                            </div>
                            <div class="row" id="divTarget">
                                
                            </div>
                        </div>

                    </div>
                    <!-- /tile body -->
                    <!-- tile footer -->
                    <div class="tile-footer text-center bg-tr-black lter dvd dvd-top text-center  m-t-20">
                        <!-- SUBMIT BUTTON -->
                        <!-- Button used for submitting the record -->
                        <button type="submit" class="btn btn-success" disabled id="formSubmit" onclick="InsertRecords();">Submit</button>
                    </div>
                    <!-- /tile footer -->

                </section>
                <!--The user can have a option to restore-->
                <section class="tile" id="div_Restore" style="display:none">

                    <!-- tile header -->
                    <div class="tile-header dvd-btm">
                        <h1 class="custom-font"><strong>Restore Sales Target</strong> List</h1>
                        <ul class="controls">
                            <li style="padding:5px">
                                <!-- function showRecords() is used for return back to view from the current page.ie it actually hide the other pages except view -->
                                <a tabindex="0" onclick="showRecords();">
                                    <!-- This is used as a link for back. It wil navigates to View List Page -->
                                    <span class="btn btn-hotpink btn-xs mb-10">
                                        <i class="fa fa-arrow-left"></i>Back
                                    </span>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <!-- /tile header -->
                    <!-- tile body -->
                    <div class="tile-body">
                        <div class="row">
                            <div class="col-md-6"><div id="tableToolsRestore"></div></div>
                            <div class="col-md-6"><div id="colVisRestore"></div></div>
                        </div>
                        <!-- This table is used for displaying restore details.here user can able to delete or restore the records -->
                        <table class="table table-custom" id="advancedusageRestore">
                            <thead>
                                <tr>
                                    <th>Sales Target Code</th>
                                    <th>Sales Organization</th>
                                    <th>Sales Person</th>
                                    <th>Calendar Year</th>
                                    <th>Action</th>
                                </tr>


                            </thead>
                            <tbody>
                                <tr>
                                    <th>TRG0000003</th>
                                    <th>Tambaram Branch</th>
                                    <th>Vignesh</th>
                                    <th>2017-2018</th>
                                    <th>Action</th>
                                </tr>
                                <tr>
                                    <th>TRG0000004</th>
                                    <th>Avadi Branch</th>
                                    <th>Prakash</th>
                                    <th>2017-2018</th>
                                    <th>Action</th>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <!-- /tile body -->

                </section>

            </div>

        </div>

    </div>

</section>



