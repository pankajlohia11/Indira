app1.controller("AC_ShipmentCtrl", function ($scope, $http, $window, $compile) {
    function GetTypeFromURL() {
        var type = window.location.href.toString().split("type=");
        $scope.Type = type[1];
        if ($scope.Type == "Agency") {
            $scope.S_Type = "1";
        }
        else if ($scope.Type == "Trading") {
            $scope.S_Type = "2";
        }
        else if ($scope.Type == "Store") {
            $scope.S_Type = "3";
        }
        $("#drpType").val($scope.SelectedOredertype).trigger("chosen:updated");
    }
    GetTypeFromURL();
    GetPrivilages();
    GetSalesPersonList();
    GetShipmentList();
    
    function GetPrivilages() {
        $scope.CompanyType = "Customer";
        var getprivilages = $http.get("/ET_Sales_Shipment/GetPrivilages");
        getprivilages.then(function (privilage1) {
            var privilage = JSON.parse(privilage1.data);
            if (privilage.length != 0) {
                $scope.Iscreate = privilage[0].IS_ADD;
                $scope.Isedit = privilage[0].IS_EDIT;
                $scope.Isdelete = privilage[0].IS_DELETE;
                $scope.Isrestore = privilage[0].IS_FULLCONTROL;
                $scope.Isview = privilage[0].IS_VIEW;
            }
            else {
                $scope.Iscreate = true;
                $scope.Isedit = true;
                $scope.Isdelete = true;
                $scope.Isrestore = true;
                $scope.Isview = true;
            }
        }, function () {
            alert('Privilages Not Found');
        }
        );
    }
    function GetShipmentList() {
        var getshipmentlist = $http.get("/ET_Sales_Shipment/GetShipmentList",
            {
                params: { delete: false, type: $scope.S_Type }
            });
        getshipmentlist.then(function (shipmentlist) {
            var res = JSON.parse(shipmentlist.data);
            $scope.shipmentlist = res;
        }, function () {
            alert("Quotation List Found");
        });
    }
    function GetShipmentRestoreList() {
        var getshipmentrestorelist = $http.get("/ET_Sales_Shipment/GetShipmentList",
            {
                params: { delete: true, type: $scope.S_Type }
            });
        getshipmentrestorelist.then(function (shipmentrestorelist) {
            var res = JSON.parse(shipmentrestorelist.data);
            $scope.shipmentrestorelist = res;
        }, function () {
            alert("Quotation Restore List Found");
        });
    }
    function GetSalesPersonList() {
        var getsalespersonlist = $http.get("/ET_Sales_Shipment/GetSalesPerson",
            {
                params: { orgtype: $scope.S_Type
            }
            });
        getsalespersonlist.then(function (salespersonlist) {
            var res = JSON.parse(salespersonlist.data);
            $scope.salespersons = res;
            $scope.S_SalesPerson = "";
        }, function () {
            alert('Data not found');
        });
    }
  
    $scope.OrderTypeChange = function () {
        $scope.S_SupplierID = "";
        $scope.S_CustSup = "";
        $scope.S_ScheduleID = "";
        $scope.schedules = {};
        if ($scope.S_Type == 1) {
            $scope.CompanyType = "Supplier";
        }
        else
        {
            $scope.CompanyType = "Customer";
        }
        GetCustomers();
        GetSuppliers();
    }
    $scope.CustSupChange = function () {
        $scope.schedules = {};
        $scope.S_ScheduleID = "";
        GetSchedules();
    }
    $scope.SupplierChange = function () {
        $scope.schedules = {};
        $scope.S_ScheduleID = "";
        GetSchedules();
    }
    function GetCustomers() {
        if ($scope.S_Type != "") {
            var getsalespersonlist = $http.get("/ET_Sales_Shipment/GetCustSup", {
                params: {
                    type: 1
                }
            });
            getsalespersonlist.then(function (salespersonlist) {
                var res = JSON.parse(salespersonlist.data);
                $scope.custsups = res;
            }, function () {
                alert('Data not found');
            });
        }
        else {
            $scope.schedules = {};
        }
    }
    function GetSuppliers() {
        if ($scope.S_Type != "") {
            var getsalespersonlist = $http.get("/ET_Sales_Shipment/GetCustSup", {
                params: {
                    type: 0
                }
            });
            getsalespersonlist.then(function (salespersonlist) {
                var res = JSON.parse(salespersonlist.data);
                $scope.supplierlist = res;
            }, function () {
                alert('Data not found');
            });
        }
        else {
            $scope.schedules = {};
        }
    }
    function GetSchedules() {
        if ($scope.S_CustSup != "" && $scope.S_SupplierID != "") {
            var getsalespersonlist = $http.get("/ET_Sales_Shipment/GetSchedules", {
                params: {
                    id: $scope.S_ID,
                    custsupid: $scope.S_CustSup,
                    supplierid: $scope.S_SupplierID,
                    ordertype: $scope.S_Type,
                    type: $scope.submittext
                }
            });
            getsalespersonlist.then(function (salespersonlist) {
                debugger;
                var res = JSON.parse(salespersonlist.data);
                $scope.schedules = res;
            }, function () {
                alert('Data not found');
            });
        }
        else
        {
            $scope.schedules = {};
        }
    }
    $scope.SalesPersonChange = function () {}
    $scope.ScheduleChange = function ()
    {
    }
    $scope.ClientSch = function (schids) {
        $scope.S_ScheduleID = schids;
        var schids = "";
        try {
            schids = $scope.S_ScheduleID.join();
        }
        catch (ex) {
            schids = $scope.S_ScheduleID;
        }
        ShipmentDetails(schids);
    }
   
    $scope.showRecords = function () {
        $("#advancedusage").dataTable().fnDestroy();
        GetShipmentList();
        $("#div_View").css("display", "block");
        $("#div_Restore").css("display", "none");
        $("#div_Edit").css("display", "none");
        $("#div_Print").css("display", "none");
    }
    $scope.restoreRecords = function () {
        $("#advancedusageRestore").dataTable().fnDestroy();
        GetShipmentRestoreList();
        $("#div_View").css("display", "none");
        $("#div_Restore").css("display", "block");
        $("#div_Edit").css("display", "none");
        $("#div_Print").css("display", "none");
    }
    $scope.createnew = function () {
        if ($scope.Iscreate) {
            $("#formSubmit").attr('disabled', "disabled");
            $("#div_View").css("display", "none");
            $("#div_Edit").css("display", "block");
            $scope.submittext = "Submit";
            $scope.createedit = "Create";
            $scope.S_ID = "0";
            $scope.S_Code = "";
            $scope.S_CustSup = "";
            $scope.S_SupplierID = "";
            $scope.S_ScheduleID = "";
            $scope.S_SalesPerson = "";
            
            $("#txtETD").val("");
            $("#txtInvoiceAmount").val("");
            $("#txtETA").val("");
            $scope.S_DeparturePort = "";
            $scope.S_ArrivalPort = "";
            $scope.S_BL_NO = "";
            $("#txtBLDate").val("");
            $scope.S_INV_NO = "";
            $("#txtINVDate").val("");
            $scope.S_INV_AMT = "";
            $scope.custsups = {};
            $scope.supplierlist = {};
            $scope.S_GrossWeight = "";
            $scope.S_ContainerNo = "";
            $scope.S_MotherVessel = "";
            $scope.S_FleederVessel = "";
            $("#drpCustSup").val("").trigger("chosen:updated");
            $("#drpScheduleID").val("").trigger("chosen:updated");
            $("#drpSalesPerson").val("").trigger("chosen:updated");
            $scope.schedules = {};
            $("#shipmentdetailsbody").html("");
            $scope.OrderTypeChange();
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }
    function validate() {
        debugger;
        var tr = $("#shipmentdetailsbody").find("tr");
        var txt = "";
        if ($scope.S_SalesPerson == "") {
            message = "Select Sales Person";
            toastr["error"](message, "Notification");
            return "";
        }
        if ($scope.S_Type == "") {
            message = "Select Order Type";
            toastr["error"](message, "Notification");
            return "";
        }
        if ($scope.S_CustSup == "") {
            message = "Select Customer";
            toastr["error"](message, "Notification");
            return "";
        }
        if ($scope.S_SupplierID == "") {
            message = "Select Supplier";
            toastr["error"](message, "Notification");
            return "";
        }
        if ($scope.S_ScheduleID == "") {
            message = "Select Schedule Codes";
            toastr["error"](message, "Notification");
            return "";
        }
        if ($("#txtETD").val() == "") {
            message = "Select ETD Date";
            toastr["error"](message, "Notification");
            return "";
        }
        if ($("#txtETA").val() == "") {
            message = "Select ETA Date";
            toastr["error"](message, "Notification");
            return "";
        }
        if ($scope.S_DeparturePort == "") {
            message = "Enter Departure Port";
            toastr["error"](message, "Notification");
            return "";
        }
        if ($scope.S_ArrivalPort == "") {
            message = "Enter Arrival Port";
            toastr["error"](message, "Notification");
            return "";
        }
        if ($scope.S_BL_NO == "") {
            message = "Enter BL No";
            toastr["error"](message, "Notification");
            return "";
        }
        if ($("#txtBLDate").val() == "") {
            message = "Select BL Date";
            toastr["error"](message, "Notification");
            return "";
        }
        if ($scope.S_INV_NO == "") {
            message = "Enter Invoice No";
            toastr["error"](message, "Notification");
            return "";
        }
        if ($("#txtINVDate").val() == "") {
            message = "Select Invoice Date";
            toastr["error"](message, "Notification");
            return "";
        }
        if ($scope.S_GrossWeight == "") {
            message = "Enter Gross Weight";
            toastr["error"](message, "Notification");
            return "";
        }
        if (parseFloat($scope.S_GrossWeight.split('.').join("").replace(",", ".")) == 0) {
            message = "Gross Weight Cannot be empty";
            toastr["error"](message, "Notification");
            return "";
        }
        if ($("#txtInvoiceAmount").val() == "") {
            message = "Invoice Amount Cannot be empty";
            toastr["error"](message, "Notification");
            return "";
        }
        if (parseFloat($("#txtInvoiceAmount").val().split('.').join("").replace(",", ".")) == 0) {
            message = "Invoice Amount Cannot be empty";
            toastr["error"](message, "Notification");
            return "";
        }
        for (i = 0; i < tr.length; i++) {
            var td = $(tr[i]).find("td");
            var scheduledate = $(td[4]).find("input").val();
            var availableqty = 0;
            var qty = 0;
            if ($scope.S_Type == 2) {
                availableqty=$(td[8]).find("input").val();
                qty= $(td[9]).find("input").val();
            }
            else {
                availableqty = $(td[7]).find("input").val();
                qty = $(td[8]).find("input").val();
            }
            if (scheduledate == "") {
                message = "Enter Schedule Date at row:" + (i + 1);
                toastr["error"](message, "Notification");
                return "";
            } else if (qty == "") {
                message = "Enter Quantity at row:" + (i + 1);
                toastr["error"](message, "Notification");
                return "";
            }
            else if (parseFloat(qty.split('.').join("").replace(",", ".")) > parseFloat(availableqty.split('.').join("").replace(",", "."))) {
                //if ($scope.S_Type =="3") {
                //    message = "Quantity cannot be more than Available Quantity at row:" + (i + 1);
                //    toastr["error"](message, "Notification");
                //    return "";
                //} 
                //else {
                    txt = txt + $(td[0]).find("input").val() + ",";
                    txt = txt + $(td[1]).find("input").val() + ",";
                    txt = txt + $(td[2]).find("input").val() + ",";
                txt = txt + parseFloat($(td[7]).find("input").val().split('.').join("").replace(",", ".")) + ",";
                if ($scope.S_Type==2) {
                    txt = txt + parseFloat($(td[8]).find("input").val().split('.').join("").replace(",", ".")) + ",";
                    txt = txt + parseFloat($(td[9]).find("input").val().split('.').join("").replace(",", ".")) + "|";
                }
                else {
                    txt = txt + parseFloat($(td[8]).find("input").val().split('.').join("").replace(",", ".")) + "|";
                }
               // }
                
            }
            else {
                txt = txt + $(td[0]).find("input").val() + ",";
                txt = txt + $(td[1]).find("input").val() + ",";
                txt = txt + $(td[2]).find("input").val() + ",";
                txt = txt + parseFloat($(td[7]).find("input").val().split('.').join("").replace(",", ".")) + ",";
                if ($scope.S_Type == 2) {
                    txt = txt + parseFloat($(td[8]).find("input").val().split('.').join("").replace(",", ".")) + ",";
                    txt = txt + parseFloat($(td[9]).find("input").val().split('.').join("").replace(",", ".")) + "|";
                }
                else {
                    txt = txt + parseFloat($(td[8]).find("input").val().split('.').join("").replace(",", ".")) + "|";
                }
            }
        }
        return txt;
    }
    $scope.SubmitClick = function () {
        debugger;
        $("#div_loadImage").css("display", "block");
        var txt = validate();
        var schids = "";
        try {
            schids = $scope.S_ScheduleID.join();
        }
        catch(ex)
        {
            schids = $scope.S_ScheduleID;
        }
        debugger;
        if (txt != "") {
            var post = $http({
                method: "POST",
                url: "/ET_Sales_Shipment/ET_Sales_Shipment_Add",
                dataType: 'json',
                data: {
                    S_ID: $scope.S_ID,
                    S_Code: $scope.S_Code,
                    S_Type: $scope.S_Type,
                    S_CustSup: $scope.S_CustSup,
                    S_SupplierID: $scope.S_SupplierID,
                    S_SalesPerson: $scope.S_SalesPerson,
                    S_ScheduleID: schids,
                    S_ETD: $("#txtETD").val(),
                    S_ETA: $("#txtETA").val(),
                    S_DeparturePort: $scope.S_DeparturePort,
                    S_ArrivalPort: $scope.S_ArrivalPort,
                    S_BL_NO: $scope.S_BL_NO,
                    S_BL_DATE: $("#txtBLDate").val(),
                    S_INV_NO: $scope.S_INV_NO,
                    S_INV_DATE: $("#txtINVDate").val(),
                    S_INV_AMT: parseFloat($("#txtInvoiceAmount").val().split('.').join("").replace(",", ".")),
                    S_GrossWeight: parseFloat($scope.S_GrossWeight.split('.').join("").replace(",", ".")),
                    S_ContainerNo: $scope.S_ContainerNo,
                    S_MotherVessel: $scope.S_MotherVessel,
                    S_FleederVessel: $scope.S_FleederVessel,
                    shipmentdetails: txt,
                },
                headers: { "Content-Type": "application/json" }
            });

            post.success(function (data, status) {
                $("#div_loadImage").css("display", "none");
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else if (data.indexOf("Validation") > -1) {
                    toastr["error"](data, "Notification");
                }
                else if (data.indexOf("Success") > -1) {
                    var res = data.split(":");
                    if ($scope.S_ID == 0) {
                        message = 'Record Inserted Successfully With Code : ' + res[1];
                        toastr["success"](message, "Notification");
                    }
                    else {
                        message = 'Record Updated Successfully With Code : ' + res[1];
                        toastr["success"](message, "Notification");
                    }
                    $scope.createnew();
                }
                else {
                    message = "Failed to do this operation.";
                    toastr["error"](message, "Notification");
                }
            });

            post.error(function (data, status) {
                $window.alert(data.Message);
                $("#div_loadImage").css("display", "none");
            });
        }
        else {
            $("#div_loadImage").css("display", "none");
        }

    }
    $scope.editRecords = function (a) {
        a = parseInt(a);
        if ($scope.Isedit) {
            var post = $http({
                method: "POST",
                url: "/ET_Sales_Shipment/ET_Sales_Shipment_Update_GetbyID",
                dataType: 'json',
                data: {
                    id: a
                },
                headers: { "Content-Type": "application/json" }
            });
            post.success(function (data, status) {
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    var ShipmentByID = JSON.parse(data);
                    $("#formSubmit").removeAttr('disabled');
                    $("#div_View").css("display", "none");
                    $("#div_Edit").css("display", "block");
                    $scope.submittext = "Update";
                    $scope.createedit = "Edit";
                    $("#span_tabtext").html("Edit");
                    debugger;
                    $scope.S_ID = ShipmentByID.S_ID;
                    $scope.S_Code = ShipmentByID.S_Code;
                    $scope.S_Type = ShipmentByID.S_Type;
                    $scope.S_CustSup = ShipmentByID.S_CustSup;
                    $scope.S_SupplierID = ShipmentByID.S_SupplierID;
                    $scope.S_ScheduleID = ShipmentByID.S_ScheduleID.split(',');
                    $scope.S_SalesPerson = ShipmentByID.S_SalesPerson;

                    var ETD = new Date(parseInt(ShipmentByID.S_ETD.substr(6)));
                    var ETD1 = ("0" + ETD.getDate()).slice(-2) + "-" + ("0" + (ETD.getMonth() + 1)).slice(-2) + "-" + ETD.getFullYear();
                    $("#txtETD").val(ETD1);

                    var ETA1 = new Date(parseInt(ShipmentByID.S_ETA.substr(6)));
                    var ETA = ("0" + ETA1.getDate()).slice(-2) + "-" + ("0" + (ETA1.getMonth() + 1)).slice(-2) + "-" +  ETA1.getFullYear();
                    $("#txtETA").val(ETA);


                    $scope.S_DeparturePort = ShipmentByID.S_DeparturePort;
                    $scope.S_ArrivalPort = ShipmentByID.S_ArrivalPort;
                    $scope.S_BL_NO = ShipmentByID.S_BL_NO;

                    var BLDate1 = new Date(parseInt(ShipmentByID.S_BL_DATE.substr(6)));
                    var BLDate = ("0" + BLDate1.getDate()).slice(-2) + "-" + ("0" + (BLDate1.getMonth() + 1)).slice(-2) + "-" +  BLDate1.getFullYear();
                    $("#txtBLDate").val(BLDate);

                    $scope.S_INV_NO = ShipmentByID.S_INV_NO;

                    var INVDate1 = new Date(parseInt(ShipmentByID.S_INV_DATE.substr(6)));
                    var INVDate = ("0" + INVDate1.getDate()).slice(-2) + "-" + ("0" + (INVDate1.getMonth() + 1)).slice(-2) + "-" + INVDate1.getFullYear();
                    $("#txtINVDate").val(INVDate);


                    $scope.S_INV_AMT = ShipmentByID.S_INV_AMT.toLocaleString("es-ES", { minimumFractionDigits: 2 });
                    $scope.S_GrossWeight = ShipmentByID.S_GrossWeight.toLocaleString("es-ES", { minimumFractionDigits: 2 });
                    $scope.S_ContainerNo = ShipmentByID.S_ContainerNo;
                    $scope.S_MotherVessel = ShipmentByID.S_MotherVessel;
                    $scope.S_FleederVessel = ShipmentByID.S_FleederVessel;
                    $("#drpSalesPerson").val(ShipmentByID.S_SalesPerson).trigger("chosen:updated");
                    GetCustomers();
                    GetSuppliers();
                    GetSchedules();
                    ShipmentDetails(ShipmentByID.S_ScheduleID);
                }
            });

            post.error(function (data, status) {
                $window.alert(data.Message);
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }
    $scope.ViewRecords = function (a) {
        if ($scope.Isview) {
            var post = $http({
                method: "POST",
                url: "/ET_Sales_Shipment/ET_Sales_Shipment_View",
                dataType: 'html',
                data: {
                    id: a
                },
                headers: { "Content-Type": "application/json" }
            });
            post.success(function (data, status) {
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    $('#viewpopup').html(data);
                    $("#btnviewpopup").trigger("click");
                    //var privilage = JSON.parse(data);
                    //$scope.txtMaterialCodeView = privilage[0].MATERIAL_CODE;
                    //$scope.txtMaterialnameView = privilage[0].MATERIAL_NAME;
                    //$scope.txtDescriptionView = privilage[0].MATERIAL_DESCRIPTION;
                    //if (privilage[0].COTTON_PER == 1)
                    //    $scope.chkCottonView = true;
                    //else
                    //    $scope.chkCottonView = false;
                    //$rootScope.$emit("CallParentMethod", { a: $scope.txtMaterialCodeView, b: $scope.txtMaterialnameView, c: $scope.txtDescriptionView, d: $scope.chkCottonView });

                }
            });

            post.error(function (data, status) {
                $window.alert(data.Message);
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }
    function ShipmentDetails(a) {
        debugger;
        $http({
            method: 'POST',
            url: '/ET_Sales_Shipment/ET_Sales_ShipmentDetails',
            dataType: 'html',
            data: {
                ids: a
            },
        }).success(function (data) {
            debugger;
            angular.element(document.getElementById('shipmentdetailsbody')).html(data);
            GetSchduleDetails(a);
        });
    }
    function GetSchduleDetails(a) {
        var post = $http({
            method: "POST",
            url: "/ET_Sales_Shipment/GetSchduleDetails",
            dataType: 'html',
            data: {
                id: a,
            },
            headers: { "Content-Type": "application/json" }
        });
        post.success(function (data, status) {
            debugger;
            var res = JSON.parse(data);
            $scope.S_SalesPerson = res[0].SH_SalesPerson;
            $("#drpSalesPerson").val($scope.S_SalesPerson).trigger("chosen:updated");
        });

        post.error(function (data, status) {
            $window.alert(data.Message);
        });
    }
    $scope.Restoredeleterecords = function (a, $event, b) {
        debugger;
        var res = false;
        if (b)
            res = $scope.Isdelete;
        else
            res = $scope.Isrestore
        if (res) {
            var post = $http({
                method: "POST",
                url: "/ET_Sales_Shipment/ET_Sales_Shipment_RestoreDelete",
                dataType: 'json',
                data: {
                    id: a,
                    type: b
                },
                headers: { "Content-Type": "application/json" }
            });
            post.success(function (data, status) {
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    if (data == "Success") {
                        $($event.target.parentElement.parentElement.parentElement).fadeOut(800, function () { $(this).remove(); });
                        if (b) {
                            message = "Record Deleted Successfully.";
                        }
                        else {
                            message = "Record Restored Successfully.";
                        }

                        toastr["success"](message, "Notification");
                    }
                    else {
                        message = "Failed to do this operation.";
                        toastr["error"](message, "Notification");
                    }
                }
            });
            post.error(function (data, status) {
                $window.alert(data.Message);
            });
        }
    }

  
    $scope.generateDebitNote = function (a, b) {
        if ($scope.Isedit) {

            var getshipmentlist = $http.get("/ET_Sales_Shipment/GetDebitNoteDetails",
                {
                    params: { id: a }
                });
            getshipmentlist.then(function (shipmentlist) {
                debugger;
                var res = JSON.parse(shipmentlist.data);
                angular.element(document.getElementById('popupFOBTable')).html("");
                for (var i = 0; i < res.length; i++) {
                    var Rowhtml = "<tr><td>" + res[i].ordNo + "</td><td style='text-align:right'>" + parseFloat(res[i].ordAmt).toLocaleString("es-ES", { minimumFractionDigits: 2 }) + "</td><td><input style='text-align:right' type='text' onchange='fobAmountChange(this);' class='form-control' /></td></tr>";
                    var temp = $compile(Rowhtml)($scope);
                    angular.element(document.getElementById('popupFOBTable')).append(temp);
                }
                $("#popchkFob").prop('checked', false);
                $("#div_foblist").css("display", "none");
                $("#popInvoice").val(parseFloat(b).toLocaleString("es-ES", { minimumFractionDigits: 2 }));
                $("#popID").val(a);
                $("#btnviewdebitnotepopup").trigger("click");
            }, function () {
                alert("DebitNote Details Not Found");
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }
    $scope.CommissionRecieve = function (a) {
        if ($scope.Isedit) {
            debugger;
            $("#popupCommissionRecieved").val("");
            $("#txtCommissionDate").val("");
            $("#popupID").val(a);
            var getshipmentlist = $http.get("/ET_Sales_Shipment/GetCommissionDetails",
                {
                    params: { id: a }
                });
            getshipmentlist.then(function (shipmentlist) {
                debugger;
                var res = JSON.parse(shipmentlist.data);
                if (res.isfab == 0) {
                    $("#span_commissiontitle").html("Order Amount");
                    $("#popupInvoiceAmt").val(parseFloat(res.popupInvoiceAmt[0]).toLocaleString("es-ES", { minimumFractionDigits: 2 }));
                    $("#popupCommissionAmt").val(parseFloat(res.popupCommissionAmt).toLocaleString("es-ES", { minimumFractionDigits: 2 }));
                    angular.element(document.getElementById('popupCommisionTable')).html("");

                    for (var i = 0; i < res.data.length; i++) {
                        var Rowhtml = "<tr><td>" + res.data[i].ordNo + "</td><td>" + parseFloat(res.data[i].commission).toFixed(0) + " %</td><td style='text-align:right'>" + parseFloat(res.data[i].ordAmt).toLocaleString("es-ES", { minimumFractionDigits: 2 }) + " €</td><td style='text-align:right'>" + parseFloat(res.data[i].commission * res.data[i].ordAmt / 100).toLocaleString("es-ES", { minimumFractionDigits: 2 }) + " €</td></tr>";
                        var temp = $compile(Rowhtml)($scope);
                        angular.element(document.getElementById('popupCommisionTable')).append(temp);
                    }
                    var Rowhtml = "<tr><td colspan='2' style='text-align:center;font-weight:bold;'>Total</td><td style='text-align:right;font-weight:bold;'>" + parseFloat(res.popupInvoiceAmt[0]).toLocaleString("es-ES", { minimumFractionDigits: 2 }) + " €<input style='display:none;' type='text' id='totalInvoiceamount' value='" + parseFloat(res.popupInvoiceAmt[0]).toLocaleString("es-ES", { minimumFractionDigits: 2 }) + "' /></td><td style='text-align:right;font-weight:bold;'>" + parseFloat(res.popupCommissionAmt).toLocaleString("es-ES", { minimumFractionDigits: 2 }) + " €</td></tr>";
                    var temp = $compile(Rowhtml)($scope);
                    angular.element(document.getElementById('popupCommisionTable')).append(temp);

                    $("#btncommissionrecievepopup").trigger("click");
                }
                else
                {
                    $("#span_commissiontitle").html("FAB Amount");
                    $("#popupInvoiceAmt").val(parseFloat(res.popupInvoiceAmt[0]).toLocaleString("es-ES", { minimumFractionDigits: 2 }));
                    $("#popupCommissionAmt").val(parseFloat(res.popupCommissionAmt).toLocaleString("es-ES", { minimumFractionDigits: 2 }));
                    angular.element(document.getElementById('popupCommisionTable')).html("");
                    var totfab = 0;
                    for (var i = 0; i < res.data.length; i++) {
                        var Rowhtml = "<tr><td>" + res.data[i].ordNo + "</td><td>" + parseFloat(res.data[i].commission).toFixed(0) + " %</td><td style='text-align:right'>" + parseFloat(res.FabAmounts[i]).toLocaleString("es-ES", { minimumFractionDigits: 2 }) + " €</td><td style='text-align:right'>" + parseFloat(res.data[i].commission * res.FabAmounts[i] / 100).toLocaleString("es-ES", { minimumFractionDigits: 2 }) + " €</td></tr>";
                        var temp = $compile(Rowhtml)($scope);
                        angular.element(document.getElementById('popupCommisionTable')).append(temp);
                        totfab = totfab + (parseFloat(res.FabAmounts[i]));
                    }
                    var Rowhtml = "<tr><td colspan='2' style='text-align:center;font-weight:bold;'>Total</td><td style='text-align:right;font-weight:bold;'>" + totfab.toLocaleString("es-ES", { minimumFractionDigits: 2 }) + " €<input style='display:none;' type='text' id='totalInvoiceamount' value='" + totfab.toLocaleString("es-ES", { minimumFractionDigits: 2 }) + "' /></td><td style='text-align:right;font-weight:bold;'>" + parseFloat(res.popupCommissionAmt).toLocaleString("es-ES", { minimumFractionDigits: 2 }) + " €</td></tr>";
                    var temp = $compile(Rowhtml)($scope);
                    angular.element(document.getElementById('popupCommisionTable')).append(temp);

                    $("#btncommissionrecievepopup").trigger("click");
                }
            }, function () {
                alert("Commission Details Not Found");
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    } 
    $scope.PrintRecordsForTrading=function(a,b)
    {
        a = parseInt(a);
        if ($scope.Isview) {
            var post = $http({
                method: "POST",
                url: "/ET_Sales_Shipment/DebitNotePrint",
                dataType: 'html',
                data: {
                    id: a,
                    lang: b
                },
                headers: { "Content-Type": "application/json" }
            });
            post.success(function (data, status) {
                debugger;
                if (data == "Session Expired") {
                    $window.location.href = '/ET_Login/ET_SessionExpire';
                }
                else if (data.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(data);
                    $("#spanErrMessage2").html(data);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {

                    $("#PAthid").attr("href", "/Sales/PDFList/Shipment/" + data[0].S_Code + "/" + data[0].S_Code + ".pdf ");
                    $("#PAthid").text(data);

                    $("#div_View").css("display", "none");
                    $("#div_Restore").css("display", "none");
                    $("#div_Edit").css("display", "none");
                    $("#div_Print").css("display", "block");
                }
            });
            tradingPrint(a,b);

        }
    }
    function tradingPrint(a,b)
    {
        debugger;
        a = parseInt(a);
        var post1 = $http({
            method: "POST",
            url: "/ET_Sales_Shipment/DebitNotePrintTrading",
            dataType: 'html',
            data: {
                id: a,
                lang: b
            },
            headers: { "Content-Type": "application/json" }
        });
        post1.success(function (data, status) {

            if (data == "Session Expired") {
                $window.location.href = '/ET_Login/ET_SessionExpire';
            }
            else if (data.indexOf("ERR") > -1) {
                $("#spanErrMessage1").html(data);
                $("#spanErrMessage2").html(data);
                if ($("#exceptionmessage").length)
                    $("#exceptionmessage").trigger("click");
            }
            else {
                debugger;
                $('#div_PrintContent').html(data);

                $("#div_View").css("display", "none");
                $("#div_Restore").css("display", "none");
                $("#div_Edit").css("display", "none");
                $("#div_Print").css("display", "block");
            }
        });
    }
    $scope.ShipmenttoInvoice = function (a)
    {
        window.location = '../ET_Sales_OneToOneInvoice/ET_Sales_ShipmentToOneToOneInvoice?&ShipID=' + a;
    }
    $scope.ChangeLanguage = function (lang) {
        debugger;
        var id = 0;
        if (lang == "E") {
            id = parseInt($("#germanformat").val());
        }
        else {
            id = parseInt($("#englishformat").val());
        }
        if ($scope.S_Type == 1) {
            $scope.PrintRecords(id, lang);
        }
        if ($scope.S_Type == 2) {
            $scope.PrintRecordsForTrading(id, lang);
        }
        
    }
    $scope.MailSentForOrder = function (a) {
        debugger;
        $("#div_loadImage").css("display", "block");
        var id1 = 0;
        $.ajax({
            type: "GET",
            url: '/ET_Sales_OrderDetails/ET_Sales_Mail_Compose_Reply_Forward',
            data: {
                id: a
            },
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                debugger;
                if (result == true) {
                    $("#div_loadImage").css("display", "none");
                    toastr["success"]("Maill Sent Successfully", "Notification");

                }
                else if (res.indexOf("ERR") > -1) {
                    $("#div_loadImage").css("display", "none");
                    toastr["error"]("Mail not sent.Some Error Occured:" + res, "Notification");
                }
            },
            error: function (response) {
                $("#div_loadImage").css("display", "none");
                toastr["error"]("Product Data Not Found", "Notification");
            }
        });
    }
    $scope.PrintRecords = function (a, b) {
        debugger;
        a = parseInt(a);
       
            
            if ($scope.Isview) {
                var post = $http({
                    method: "POST",
                    url: "/ET_Sales_Shipment/DebitNote_Print",
                    dataType: 'html',
                    data: {
                        id: a,
                        lang: b
                    },
                    headers: { "Content-Type": "application/json" }
                });
                post.success(function (data, status) {
                    debugger;
                    if (data == "Session Expired") {
                        $window.location.href = '/ET_Login/ET_SessionExpire';
                    }
                    else if (data.indexOf("ERR") > -1) {
                        $("#spanErrMessage1").html(data);
                        $("#spanErrMessage2").html(data);
                        if ($("#exceptionmessage").length)
                            $("#exceptionmessage").trigger("click");
                    }
                    else {

                        $('#div_PrintContent').html(data);

                        $("#div_View").css("display", "none");
                        $("#div_Restore").css("display", "none");
                        $("#div_Edit").css("display", "none");
                        $("#div_Print").css("display", "block");
                    }
                });

            }
      

        
        
    }
    $scope.$watch("salespersons", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () { $("#drpSalesPerson").val($scope.S_SalesPerson).trigger("chosen:updated"); }, 100);
        }
    });
    $scope.$watch("custsups", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () { $("#drpCustSup").val($scope.S_CustSup).trigger("chosen:updated"); }, 100);
        }
    });
    $scope.$watch("supplierlist", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () { $("#drpSupplierID").val($scope.S_SupplierID).trigger("chosen:updated"); }, 100);
        }
    });
    $scope.$watch("schedules", function (value) {
        debugger;
        var val = value || null;
        if (val) {
            setTimeout(function () {
                debugger;
                $("#drpScheduleID").val($scope.S_ScheduleID).trigger("chosen:updated");
            }, 100);
        }
    });
    $scope.$watch("S_ScheduleID", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () { $("#drpScheduleID").val($scope.S_ScheduleID).trigger("chosen:updated"); }, 100);
        }
    });
    $scope.$watch("shipmentlist", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () {
                dynamicDataTable('#advancedusage', '#tableTools', '#colVis');
            }, 5);
        }
    });
    $scope.$watch("shipmentrestorelist", function (value) {
        var val = value || null;
        if (val) {
            setTimeout(function () {
                dynamicDataTable('#advancedusageRestore', '#tableToolsRestore', '#colVisRestore');
            }, 5);
        }

    });
});