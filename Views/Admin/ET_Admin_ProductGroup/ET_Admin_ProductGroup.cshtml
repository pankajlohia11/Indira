
@model IEnumerable<BusinessEntity.EntityModels.Tbl_ProductGroup>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--
This form is used to create Sales Organization. Name of the Organization whether it is parent or child.
    Author=RajKumar
    Created Date = 5th April 2018
    Updated Date : 13th April 2018
    Updated By : Manoj Arumugam
    Sales Organization
    Operation={View,Restore,Create,Delete}
-->
<script type="text/javascript">
    /* BEGIN EXTERNAL SOURCE */
    /* This function is used for window onload */
    window.onload = function () {
        dynamicDataTable('#advancedusage', '#tableTools', '#colVis');
        dynamicDataTable('#advancedusageRestore', '#tableToolsRestore', '#colVisRestore');
    };


    /* This function is used for displaying View List page and hide restore and edit page */
    function showRecords() {
        $("#div_View").css("display", "block");
        $("#div_Restore").css("display", "none");
        $("#div_Edit").css("display", "none");

    }

     /* This function is used for displaying edit page and hide view and restore page */
    function createRecords(f) {
        if ($(f).attr("id").toString().indexOf("CreateYes") > -1) {

            $("#div_View").css("display", "none");
            $("#div_Edit").css("display", "block");
                            $("#ProductGroupID").val("");
                            $("#txtProductGroupCode").val("0");
                            $("#txtProductGroupName").val("");
                            $("#drpProductGroupParentType").val("1").trigger("chosen:updated");
                            $("#drpProductGroupParent").val("0");

                            $("#formSubmit").html("Submit");
                            $("#span_tabtext").html("Add");
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    };

    //Get Record from database while editing
    function editRecords(e,f) {
        if ($(f).attr("id").toString().indexOf("EditYes") > -1) {
            var id = e;
            $.ajax({
                type: "GET",
                url: '@Url.Action("ET_Admin_ProductGroup_Update_GetbyID", "ET_Admin_ProductGroup")',
                data: { id: id },
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {

                    if (result.indexOf("ERR") > -1) {
                        $("#spanErrMessage1").html(result);
                        $("#spanErrMessage2").html(result);
                        if ($("#exceptionmessage").length)
                            $("#exceptionmessage").trigger("click");
                    }
                    else {
                        var res = JSON.parse(result);
                        $("#div_View").css("display", "none");
                        $("#div_Edit").css("display", "block");

                        $("#formSubmit").html("Update");
                        $("#span_tabtext").html("Edit");

                        $("#ProductGroupID").val(res.PG_ID);
                        $("#txtProductGroupCode").val(res.PG_CODE);
                        $("#txtProductGroupName").val(res.PG_NAME);
                        $("#drpProductGroupParentType").val(res.PG_TYPE).trigger("chosen:updated");
                        ProductBind();

                        ProductBind(res.PG_PARENT_ID);

                    }
                },
                error: function (response) {
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }

    };

    //check Priviledge Access
    function deleteRecord(e, f) {
        if ($(f).attr("id").toString().indexOf("DeleteYes") > -1) {
            alertmessage(e, $(f).attr("id").toString());
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }

    //Confirm  If yes Delete  record from database
    function deleteRecordConfirm(e,f) {
        var id = e;
        $.ajax({
            type: "GET",
            url: '@Url.Action("ET_Admin_ProductGroup_Delete", "ET_Admin_ProductGroup")',
            data: { id: id },
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(result);
                    $("#spanErrMessage2").html(result);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    if (result == "Success") {
                        message = 'Record Deleted Successfully. You can retrive it from Restore page';
                        toastr["success"](message, "Notification");
                        var ctrl = "#" + f;
                        $(ctrl).parent().parent().fadeOut(800, function () { $(this).remove(); })
                    }
                    else {
                        message = 'Failed To Delete';
                        toastr["error"](message, "Notification");
                    }
                }
            },
            error: function (response) {
                if ($("#exceptionmessage").length)
                    $("#exceptionmessage").trigger("click");
            }
        });
    };

    // Insert / Update record
    function InsertRecords() {

        var ProductGroupID = $("#ProductGroupID").val();
        var txtProductGroupCode = $("#txtProductGroupCode").val();
        var txtProductGroupName = $("#txtProductGroupName").val();
        var drpProductGroupParentType = $("#drpProductGroupParentType").val();
        var drpProductGroupParent = $("#drpProductGroupParent").val();
        if (ProductGroupID != 0) {
            ProductGroupID = ProductGroupID;
        }
        else {
            ProductGroupID = "0";
        }
        if (txtProductGroupCode != 0) {
            txtProductGroupCode = txtProductGroupCode;
        }
        else {
            txtProductGroupCode = "0";
        }
        if (drpProductGroupParent != null) {
            drpProductGroupParent = drpProductGroupParent;
        }
        else {
            drpProductGroupParent = "0";
        }
            $.ajax({
                type: "GET",
                url: '@Url.Action("ET_Admin_ProductGroup_Add", "ET_Admin_ProductGroup")',
                data: {
                    GroupID: ProductGroupID,
                    GroupCode: txtProductGroupCode,
                    GroupName: txtProductGroupName,
                    ParentType: drpProductGroupParentType,
                    Parent: drpProductGroupParent
                },
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.indexOf("ERR") > -1) {
                        $("#spanErrMessage1").html(result);
                        $("#spanErrMessage2").html(result);
                        if ($("#exceptionmessage").length)
                            $("#exceptionmessage").trigger("click");
                    }
                    else {
                        if (result == "Success") {
                            $("#ProductGroupID").val("0");
                            $("#txtProductGroupCode").val("");
                            $("#txtProductGroupName").val("");
                            $("#drpProductGroupParentType").val("1").trigger("chosen:updated");
                            ProductBind(1);

                            $("#formSubmit").html("Submit");
                            $("#span_tabtext").html("Add");

                            if (ProductGroupID == 0) {
                                message = 'Record Inserted Successfully.';
                                toastr["success"](message, "Notification");
                            }
                            else {
                                message = 'Record Updated Successfully.';
                                toastr["success"](message, "Notification");
                            }
                        }
                        else if (result == "Failed") {

                            message = 'Failed to do this operation.';
                            toastr["error"](message, "Notification");
                        }
                        else if (result.indexOf("Validation") > -1) {
                            toastr["error"](result, "Notification");
                        }
                    }
                },
                error: function (response) {

                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
            });
    };

    //Restore Page Deleted records List
    function restoreRecords(f) {
        if ($(f).attr("id").toString().indexOf("RestoreYes") > -1) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("ET_Admin_ProductGroup_Restore", "ET_Admin_ProductGroup")',
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                success: function (result, textStatus, XMLHttpRequest) {
                    if (result.indexOf("ERR") > -1) {
                        $("#spanErrMessage1").html(result);
                        $("#spanErrMessage2").html(result);
                        if ($("#exceptionmessage").length)
                            $("#exceptionmessage").trigger("click");
                    }
                    else {
                        $("#div_View").css("display", "none");
                        $("#div_Restore").css("display", "block");

                        $('#restorediv').html(result);
                        dynamicDataTable('#advancedusageRestore', '#tableToolsRestore', '#colVisRestore');
                    }
                },
                error: function (response) {
                    toastr["error"]("Erroe in Restore Page", "Notification");
                }
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }

    };

    //Restore the record
    function Restoredeleterecords(id,f) {
        var id = id;
            $.ajax({
                type: "GET",
                url: '@Url.Action("ET_Admin_ProductGroup_Restore_Insert", "ET_Admin_ProductGroup")',
                data: {
                    id: id
                },
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.indexOf("ERR") > -1) {
                        $("#spanErrMessage1").html(result);
                        $("#spanErrMessage2").html(result);
                        if ($("#exceptionmessage").length)
                            $("#exceptionmessage").trigger("click");
                    }
                    else {
                        if (result == "Success") {
                            $("#div_View").css("display", "none");
                            $("#div_Restore").css("display", "block");

                            message = 'Record Restored Successfully';
                            toastr["success"](message, "Notification");
                            $(f).parent().parent().fadeOut(800, function () { $(this).remove(); })
                        }
                        else if (result == "Success") {
                            message = 'Failed to do this operation.';
                            toastr["error"](message, "Notification");
                        }
                    }
                },
                error: function (response) {
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
            });
    };

    //View Record in Popup
     function ViewRecords(e,f) {
        if ($(f).attr("id").toString().indexOf("ViewYes") > -1) {
            var id = e;
            $.ajax({
                type: "GET",
                url: '@Url.Action("ET_Admin_ProductGroup_View", "ET_Admin_ProductGroup")',
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                data: { id: id },
                success: function (result, textStatus, XMLHttpRequest) {
                    if (result.indexOf("ERR") > -1) {
                        $("#spanErrMessage1").html(result);
                        $("#spanErrMessage2").html(result);
                        if ($("#exceptionmessage").length)
                            $("#exceptionmessage").trigger("click");
                    }
                    else {
                        $('#viewpopup').html(result);
                        $("#btnviewpopup").trigger("click");
                    }
                },
                error: function (response) {
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }

    };


    //Dropdown Parent product Binding
    function ProductBind(f) {
        var pid = ($("#drpProductGroupParentType").val());
        var id = $("#ProductGroupID").val();
        if (id == "")
            id = "0";

        if (pid == 2) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("BindDropdown", "ET_Admin_ProductGroup")',
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                data: { id: id },
                success: function (result) {
                    var html = '';
                    for (i = 0; i < result.length; i++) {
                        html += '<option value="' + result[i].PG_ID + '">' + result[i].PG_NAME
                            + '</option>';
                    }
                    html += '</option>';

                    $('#drpProductGroupParent').html(html).trigger("chosen:updated");
                    $("#drpProductGroupParent").val(f).trigger("chosen:updated");
                },
                error: function (response) {
                    toastr["error"]("Parent Organization Not Loading", "Notification");
                }
            });
        }
        else {
            $('#drpProductGroupParent').html("").trigger("chosen:updated");
        }
    }


</script>
<!-- ====================================================
           ================= CONTENT ===============================
           ===================================================== -->
<!-- This section is used for displaying link menu on header bar-->
<section id="content">

    <div class="page page-shop-single-order">

        <div class="pageheader">

            <h2>Product Group<span>@*You can place subtitle here*@</span></h2>

            <div class="page-bar">

                <ul class="page-breadcrumb">
                    <li>
                        <a href="../Home/Index"><i class="fa fa-home"></i> Indra</a>
                    </li>
                    <li>
                        <a href="#">Admin</a>
                    </li>
                    <li>
                        <a href="#">Prouduct Group</a>
                    </li>
                </ul>

            </div>

        </div>

        <div class="row">
            <div class="col-md-12">
                <section class="tile" id="div_View">
                    <!--[div_view] All view list contents datas will be written here-->
                    <!-- tile header -->
                    <div class="tile-header dvd-btm">
                        <h1 class="custom-font"><strong>Prouduct Group</strong> List</h1>
                        <ul class="controls">
                            <!-- function createRecords() is used for add records. Once click this button it will navigate to Create page.-->
                            <li style="padding:5px">
                                <a tabindex="0" onclick="createRecords(this);" id="@ViewBag.Create">
                                    <span class="btn btn-slategray btn-xs mb-10">
                                        Create
                                    </span>
                                </a>
                            </li>
                            <!-- function restoreRecords() is used for displaying Deleted records. Once click on this button it will navigate to restore page.-->
                            <li style="padding:5px"><a tabindex="0" id="@ViewBag.Restore" onclick="restoreRecords(this);"><span class="btn btn-drank btn-xs mb-10"><i class="fa fa-undo"></i> Restore</span></a></li>
                        </ul>
                    </div>
                    <!-- /tile header -->
                    <!-- tile body -->
                    <div class="tile-body">
                        <div class="row">
                            <div class="col-md-6"><div id="tableTools"></div></div>
                            <div class="col-md-6"><div id="colVis"></div></div>
                        </div>
                        <!-- Table created for displaying View content-->
                        <table class="table table-custom" id="advancedusage">
                            <thead>
                                <tr>
                                    <th>Group ID</th>
                                    <th>Group Name</th>
                                    <th>Group Type</th>
                                    <th>ProductGroup</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null)
                                {
                                    BusinessEntity.EntityModels.EntityClasses dbcontext = new BusinessEntity.EntityModels.EntityClasses();
                                    int i = 0;
                                    foreach (var item in Model)
                                    {
                                        string pgtype = "";
                                        var product = "";
                                        if (item.PG_TYPE == 1)
                                        {
                                            pgtype = "Parent";
                                        }
                                        else
                                        {
                                            pgtype = "Child";
                                        }

                                        product = (from a in dbcontext.Tbl_ProductGroup
                                                   where a.PG_ID == item.PG_PARENT_ID
                                                   select a.PG_NAME).FirstOrDefault();
                                        if (product == null)
                                        {
                                            product = "------";
                                        }


                                        <tr>
                                            <td>
                                                @item.PG_ID
                                            </td>
                                            <td>
                                                @item.PG_NAME
                                            </td>
                                            <td>
                                                @pgtype
                                            </td>
                                            <td>
                                                @product
                                            </td>

                                            <td>
                                                @if (item.PG_TYPE != 1)
                                                {
                                                    <a onclick="editRecords(@item.PG_ID,this);" value="@item.PG_ID" id="@ViewBag.Edit@i" style="color:forestgreen;padding:5px;" title="Edit"><i class="fa fa-edit"></i></a>
                                                }
                                                <a onclick="ViewRecords(@item.PG_ID,this);" value="@item.PG_ID" id="@ViewBag.View@i" style="color:darkblue;padding:5px;" title="View"><i class="fa fa-eye"></i></a>
                                                @if (item.PG_TYPE != 1)
                                                {
                                                    <a onclick="deleteRecord(@item.PG_ID,this);" id="@ViewBag.Delete@i" style="color:red;padding:5px;" title="Delete"><i class="fa fa-trash"></i></a>
                                                }
                                            </td>
                                        </tr>
                                        i++;
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                    <!-- /tile body -->

                </section>
                <!--The user can have a option to create and edit records-->
                <section class="tile" id="div_Edit" style="display:none">

                    <!-- tile header -->
                    <div class="tile-header dvd-btm">
                        <h1 class="custom-font"><strong><span id="span_tabtext"></span></strong> Product Group </h1>
                        <ul class="controls">
                            <li style="padding:5px">
                                <!-- function showRecords() is used for return back to view from the current page.ie it actually hide the other pages except view -->
                                <a tabindex="0" onclick="showRecords();">
                                    <span class="btn btn-hotpink btn-xs mb-10">
                                        <i class="fa fa-arrow-left"></i> Back
                                    </span>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <!-- /tile header -->
                    <!-- tile body -->
                    <div class="tile-body">

                        <div name="form1" role="form" id="form1" data-parsley-validate>
                            <div class="row">
                                <div class="form-group col-md-6">
                                    <label for="ProductGroupCode">Product Group Code</label>
                                    <input type="text" name="ProductGroupID" id="ProductGroupID" class="form-control hidden">
                                    <input type="text" class="form-control" name="txtProductGroupCode" id="txtProductGroupCode" data-parsley-trigger="change" disabled
                                           data-parsley-type="alphanum" />
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="ProductGroupName">Name Of The Product Group*</label>
                                    <input type="text" class="form-control" name="txtProductGroupName" id="txtProductGroupName" pattern="/^[a-zA-Z]+$/" data-parsley-trigger="change" required />
                                </div>

                            </div>
                            <div class="row">
                                <div class="form-group col-md-6">
                                    <label for="ProductGroupParentType">Product Group Type*</label>
                                    <select class="form-control chosen-select" required id="drpProductGroupParentType" name="drpProductGroupParentType" onchange="ProductBind()">
                                        <option value="1">Parent</option>
                                        <option value="2">Child</option>
                                    </select>
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="ProductGroupParent">Parent Group</label>
                                    <select class="form-control chosen-select" name="drpProductGroupParent" id="drpProductGroupParent"></select>
                                    @*@Html.DropDownList("drpProductGroupParent", new SelectList(ViewBag.product, "PG_ID", "PG_NAME"), new { @class = "form-control chosen-select", @id = "drpProductGroupParent" })*@
                                </div>
                            </div>
                        </div>

                    </div>
                    <!-- /tile body -->
                    <!-- tile footer -->
                    <div class="tile-footer text-center bg-tr-black lter dvd dvd-top text-center  m-t-20">
                        <!-- SUBMIT BUTTON -->
                        <!-- Button used for submitting the record -->
                        <button type="submit" class="btn btn-success" disabled id="formSubmit" onclick="InsertRecords();">Submit</button>
                    </div>
                    <!-- /tile footer -->

                </section>
                <!--The user can have a option to restore-->
                <section class="tile" id="div_Restore" style="display:none">
                    <div id="restorediv">

                    </div>

                </section>

            </div>

        </div>

    </div>

</section>



