@model IEnumerable<BusinessEntity.EntityModels.Tbl_Master_Role>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!--

This Form is used to create a Roles and Privilages Details for the customer and the supplier.
    The user can edit or remove and restore  a record in Roles and Privilages.
    Author=RajKumar
    Date = 31st Mar 2018
    Admin Company View
    Operation={View,Restore,Create}
-->

<script type="text/javascript">
    /* BEGIN EXTERNAL SOURCE */
    /* This function is used for window onload */
    window.onload = function () {
        dynamicDataTable('#advancedusage', '#tableTools', '#colVis');
        dynamicDataTable('#advancedusageRestore', '#tableToolsRestore', '#colVisRestore');
    };

    /* This function is used for displaying View List page and hide restore and edit page */
    function showRecords() {
        window.location = "../ET_Admin_Roles/ET_Admin_Roles";
        };
    /* This function is used for displaying edit page and hide view and restore page */
    function createRecords(f) {
        if ($(f).attr("id").toString().indexOf("CreateYes") > -1) {
            debugger;
            $("#txtRolecode").val("");
            $("#txtRolename").val("");
            $("#txtDescription").val("");
            $("#drpRoleGroup").val("1");
            $("#RoleID").val(0);
            $("#formSubmit").attr('disabled', "disabled");
            var id = 0;
            $.ajax({
                type: "GET",
                url: '@Url.Action("ET_Admin_Roles_Get_RoleDetails", "ET_Admin_Roles")',
                data: { id: id },
                contentType: "application/json;charset=utf-8",
                dataType: "html",
                success: function (result) {
                    if (result.indexOf("ERR") > -1) {
                        $("#spanErrMessage1").html(result);
                        $("#spanErrMessage2").html(result);
                        if ($("#exceptionmessage").length)
                            $("#exceptionmessage").trigger("click");
                    }
                    else {
                        $("#div_View").css("display", "none");
                        $("#div_Edit").css("display", "block");
                        $("#formSubmit").html("Submit");
                        $("#span_tabtext").html("Add");
                        $('#tbl_body_roledetails').html(result);
                        
                    }
                },
                error: function (response) {
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    };
    /* This function is used to edit records */
    function editRecords(e,f) {
        if ($(f).attr("id").toString().indexOf("EditYes") > -1) {
            var id = e;
            $.ajax({
                type: "GET",
                url: '@Url.Action("ET_Admin_Roles_Update_Get", "ET_Admin_Roles")',
                data: { id: id },
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {

                    if (result.indexOf("ERR") > -1) {
                        $("#spanErrMessage1").html(result);
                        $("#spanErrMessage2").html(result);
                        if ($("#exceptionmessage").length)
                            $("#exceptionmessage").trigger("click");
                    }
                    else {
                        var res = JSON.parse(result);
                        $("#div_View").css("display", "none");
                        $("#div_Edit").css("display", "block");
                        $("#formSubmit").removeAttr('disabled');
                        $("#formSubmit").html("Update");
                        $("#span_tabtext").html("Edit");
                        $("#txtRolecode").val(res.ROLE_CODE);
                        $("#txtRolename").val(res.ROLE_NAME);
                        $("#txtDescription").val(res.ROLE_DESCRIPTION);
                        $("#drpRoleGroup").val(res.ROLE_ACCESS);
                        $("#RoleID").val(res.ROLE_ID);
                    }
                },
                error: function (response) {
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
            });
             $.ajax({
                type: "GET",
                url: '@Url.Action("ET_Admin_Roles_Get_RoleDetails", "ET_Admin_Roles")',
                data: { id: id },
                contentType: "application/json;charset=utf-8",
                dataType: "html",
                success: function (result) {
                    
                    if (result.indexOf("ERR") > -1) {
                        $("#spanErrMessage1").html(result);
                        $("#spanErrMessage2").html(result);
                        if ($("#exceptionmessage").length)
                            $("#exceptionmessage").trigger("click");
                    }
                    else {
                        $('#tbl_body_roledetails').html(result);
                        
                    }
                },
                error: function (response) {
                    
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }

    };
    /* This function is used to delete a record*/
    function deleteRecord(e, f)
    {
        alert("delete record");
        alert($(f).attr("id").toString());
        if ($(f).attr("id").toString().indexOf("DeleteYes") > -1) {
            alertmessage(e, $(f).attr("id").toString());
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }
    }
    ///* This function is used to confirm the deletion*/
    function deleteRecordConfirm(e, f)
    {
        alert("delete record confirmation");
        var id = e;
        $.ajax({
            type: "GET",
            url: '@Url.Action("ET_Admin_Roles_Delete", "ET_Admin_Roles")',
            data: { id: id },
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            success: function (result) {
                if (result.indexOf("ERR") > -1) {
                    $("#spanErrMessage1").html(result);
                    $("#spanErrMessage2").html(result);
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
                else {
                    if (result == "Success") {
                        message = 'Record Deleted Successfully. You can retrive it from Restore page';
                        toastr["success"](message, "Notification");
                        var ctrl = "#" + f;
                        $(ctrl).parent().parent().fadeOut(800, function () { $(this).remove(); })
                    }
                    else {
                        message = 'Failed To Delete';
                        toastr["error"](message, "Notification");
                    }
                }
            },
            error: function (response) {
                if ($("#exceptionmessage").length)
                    $("#exceptionmessage").trigger("click");
            }
        });
    };
    ///* This function is used to Insert or Update a record*/
    function InsertRecords() {
        debugger;
        var Rolecode = $("#txtRolecode").val();
        var Rolename = $("#txtRolename").val();
        var Description = $("#txtDescription").val();
        var rolegroup = $("#drpRoleGroup").val();
        var roleID = $("#RoleID").val();
        if (roleID != 0) {
            roleID = $("#RoleID").val();
        }
        else {
            roleID = "0";
        }
        var i = 0;
        var childData = "";
        $("#tbl_body_roledetails").find(".chk").each(function () {
            if (i == 0) {
                childData = childData + $(this).prop('name');
            }
            else if (i == 1) {
                childData = childData + "," + $(this).prop('name');
            }
            else if (i != 2) {
                var rest = 0;
                if ($(this).prop('checked'))
                    rest = 1;
                childData = childData + "," + rest;
            }
            if (i == 7) {
                childData = childData + "|";
                i = 0;
            }
            else
                i++;
        });
            $.ajax({
                type: "GET",
                url: '@Url.Action("ET_Admin_Roles_Add", "ET_Admin_Roles")',
                data: {

                    txtRolecode : Rolecode,
                    txtRolename: Rolename,
                    txtDescription: Description,
                    drpRoleGroup: rolegroup,
                    RollID: roleID,
                    ChildData: childData
                },
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.indexOf("ERR") > -1) {
                        $("#spanErrMessage1").html(result);
                        $("#spanErrMessage2").html(result);
                        if ($("#exceptionmessage").length)
                            $("#exceptionmessage").trigger("click");
                    }
                    else {
                        if (result.indexOf("Success") > -1) {
                            var res = result.split(':');
                            $("#txtRolecode").val("");
                            $("#txtRolename").val("");
                            $("#txtDescription").val("");
                            $("#drpRoleGroup").val("1");
                            $("#RoleID").val(0);
                            $("#formSubmit").html("Submit");
                            $("#span_tabtext").html("Add");

                            $("#tbl_body_roledetails").find(".chk").each(function () {
                                if ($(this).prop('checked') == true) {
                                    $(this).prop('checked', false);
                                }
                            });
                            if (roleID == 0) {
                                message = 'Record Inserted Successfully With Code : ' + res[1].toString();
                                toastr["success"](message, "Notification");
                            }
                            else {
                                message = 'Record Updated Successfully With Code : ' + res[1].toString()
                                toastr["success"](message, "Notification"); }
                        }
                        else if (result == "Failed") {

                            message = 'Failed to do this operation.';
                            toastr["error"](message, "Notification");
                        }
                        else if (result.indexOf("Validation") > -1)
                        {
                            toastr["error"](result, "Notification");
                        }
                    }
                },
                error: function (response) {
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
            });
    };
    ///* This function is used to get restore list*/
    function restoreRecords(f) {
        if ($(f).attr("id").toString().indexOf("RestoreYes") > -1) {
            $.ajax({
                type: "GET",
                url: '@Url.Action("ET_Admin_Roles_Restore", "ET_Admin_Roles")',
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                success: function (result, textStatus, XMLHttpRequest) {
                    if (result.indexOf("ERR") > -1) {
                        $("#spanErrMessage1").html(result);
                        $("#spanErrMessage2").html(result);
                        if ($("#exceptionmessage").length)
                            $("#exceptionmessage").trigger("click");
                    }
                    else {
                        $("#div_View").css("display", "none");
                        $("#div_Restore").css("display", "block");

                        $('#restorediv').html(result);
                        dynamicDataTable('#advancedusageRestore', '#tableToolsRestore', '#colVisRestore');
                    }
                },
                error: function (response) {
                    alert('error');
                }
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }

    };
    ///* This function is used to restore a record*/
    function Restoredeleterecords(id,f) {
        var id = id;
            $.ajax({
                type: "GET",
                url: '@Url.Action("ET_Admin_Roles_Restore_Insert", "ET_Admin_Roles")',
                data: {
                    id: id
                },
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {
                    if (result.indexOf("ERR") > -1) {
                        $("#spanErrMessage1").html(result);
                        $("#spanErrMessage2").html(result);
                        if ($("#exceptionmessage").length)
                            $("#exceptionmessage").trigger("click");
                    }
                    else {
                        if (result == "Success") {
                            $("#div_View").css("display", "none");
                            $("#div_Restore").css("display", "block");

                            message = 'Record Restored Successfully';
                            toastr["success"](message, "Notification");
                            $(f).parent().parent().fadeOut(800, function () { $(this).remove(); })
                        }
                        else if (result == "Success") {
                            message = 'Failed to do this operation.';
                            toastr["error"](message, "Notification");
                        }
                    }
                },
                error: function (response) {
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
            });
    };

    ///* This function is used to view a record*/
    function ViewRecords(e,f) {
        if ($(f).attr("id").toString().indexOf("ViewYes") > -1) {
            var id = e;
            $.ajax({
                type: "GET",
                url: '@Url.Action("ET_Admin_Roles_View", "ET_Admin_Roles")',
                contentType: "application/json; charset=utf-8",
                dataType: "html",
                data: { id: id },
                success: function (result, textStatus, XMLHttpRequest) {
                    if (result.indexOf("ERR") > -1) {
                        $("#spanErrMessage1").html(result);
                        $("#spanErrMessage2").html(result);
                        if ($("#exceptionmessage").length)
                            $("#exceptionmessage").trigger("click");
                    }
                    else {
                        $('#viewpopup').html(result);
                        $("#btnviewpopup").trigger("click");
                    }
                },
                error: function (response) {
                    if ($("#exceptionmessage").length)
                        $("#exceptionmessage").trigger("click");
                }
            });
        }
        else {
            message = "You don't access to do this operation, please contact admin.";
            toastr["error"](message, "Notification");
        }

    };
    ///* This function is used to check all*/
    function checkall(e)
    {
        var tr = $(e).parent().parent().parent();
        var i = 0;
        var status = $(e).prop('checked');
        $(tr).find(".chk").each(function () {
            if (i > 1) {
                $(this).prop('checked', status);
            }
                i++;
        });
    }
    function uncheckall(e) {
        var tr = $(e).parent().parent().parent();
        var i = 0;
        var j = 0;
        var all;
        $(tr).find(".chk").each(function () {
            if (i > 2) {
                if ($(this).prop('checked')) {
                    j++;
                }
            }
            if (i == 2)
                all = $(this);
            i++;
        });
        if (j == 5) { $(all).prop('checked', true);}
        else { $(all).prop('checked', false); }
    }
</script>
<!-- ====================================================
           ================= CONTENT ===============================
           ===================================================== -->
<!-- This section is used for displaying link menu on header bar-->
<section id="content">

    <div class="page page-shop-single-order">

        <div class="pageheader">

            <h2>Roles and Privilege <span>@*You can place subtitle here*@</span></h2>

            <div class="page-bar">

                <ul class="page-breadcrumb">
                    <li>
                        <a href="../Home/Index"><i class="fa fa-home"></i> Indra</a>
                    </li>
                    <li>
                        <a href="#">Admin</a>
                    </li>
                    <li>
                        <a href="#">Roles and Privilege</a>
                    </li>
                </ul>

            </div>

        </div>

        <div class="row">
            <div class="col-md-12">

                <section class="tile" id="div_View">
                    <!--[div_view] All view list contents datas will be written here-->
                    <!-- tile header -->
                    <div class="tile-header dvd-btm">
                        <h1 class="custom-font"><strong>Roles and Privilege</strong> List</h1>
                        <ul class="controls">
                            <!-- function createRecords() is used for add records. Once click this button it will navigate to Create page.-->
                            <li style="padding:5px">
                                <a tabindex="0" onclick="createRecords(this);" id="@ViewBag.Create">
                                    <span class="btn btn-slategray btn-xs mb-10">
                                        Create
                                    </span>
                                </a>
                            </li>
                            @*//code remove for restore button by swapna*@
                            <!-- function restoreRecords() is used for displaying Deleted records. Once click on this button it will navigate to restore page.-->
                            <li style="padding:5px"><a tabindex="0" id="@ViewBag.Restore" onclick="restoreRecords(this);"><span class="btn btn-drank btn-xs mb-10"><i class="fa fa-undo"></i> Restore</span></a></li>
                        </ul>
                    </div>
                    <!-- /tile header -->
                    <!-- tile body -->

                    <div class="tile-body">
                        <div class="row">
                            <div class="col-md-6"><div id="tableTools"></div></div>
                            <div class="col-md-6"><div id="colVis"></div></div>
                        </div>
                        <table class="table table-custom" id="advancedusage">
                            <thead>

                                <tr>
                                    <th>Role ID</th>
                                    <th>Role Code</th>
                                    <th>Role Name</th>
                                    <th>Role Description</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null)
                                {
                                    int i = 0;
                                    foreach (var item in Model)
                                    {
                                        <tr>
                                            <td>
                                                @item.ROLE_ID
                                            </td>
                                            <td>
                                                @item.ROLE_CODE
                                            </td>
                                            <td>
                                                @item.ROLE_NAME
                                            </td>
                                            <td>
                                                @item.ROLE_DESCRIPTION
                                            </td>
                                            <td>
                                                <a onclick="editRecords(@item.ROLE_ID,this);" value="@item.ROLE_ID" id="@ViewBag.Edit@i" style="color:forestgreen;padding:5px;" title="Edit"><i class="fa fa-edit"></i></a>

                                                <a onclick="ViewRecords(@item.ROLE_ID,this);" value="@item.ROLE_ID" id="@ViewBag.View@i" style="color:darkblue;padding:5px;" title="View"><i class="fa fa-eye"></i></a>

                                                <a onclick="deleteRecord(@item.ROLE_ID,this);" id="@ViewBag.Delete@i" style="color:red;padding:5px;" title="Delete"><i class="fa fa-trash"></i></a>
                                                @*@Html.ActionLink("Delete", "ET_Admin_Roles_Delete", "ET_Admin_Roles", new { id = item.ROLE_ID, @class = "icon-trash" }, null)*@


                                            </td>
                                        </tr>
                                        i++;
                                    }
                                }
                            </tbody>
                        </table>
                    </div>



                </section>

                <section class="tile" id="div_Edit" style="display:none">

                    <!-- tile header -->
                    <div class="tile-header dvd-btm">
                        <h1 class="custom-font"><strong><span id="span_tabtext"></span> Roles and Privilege</strong> List</h1>
                        <ul class="controls">
                            <li style="padding:5px">
                                <!-- function showRecords() is used for return back to view from the current page.ie it actually hide the other pages except view -->
                                <a tabindex="0" onclick="showRecords();">
                                    <!-- This is used as a link for back. It wil navigates to View List Page -->
                                    <span class="btn btn-hotpink btn-xs mb-10">
                                        <i class="fa fa-arrow-left"></i>Back
                                    </span>
                                </a>
                            </li>
                        </ul>
                    </div>
                    <!-- /tile header -->
                    <!-- tile body -->

                    <div class="tile-body">

                        <div name="form1" role="form" id="form1" data-parsley-validate>
                            <div class="row">
                                <div class="form-group col-md-6">
                                    <label for="txtRolecode">Role Code</label>
                                    <input type="text" name="txtRolecode" minlength="5" maxlength="10" disabled="@ViewBag.AutoManual" id="txtRolecode" class="form-control" data-parsley-trigger="change" @ViewBag.Required>
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="txtRolename">Role Name *</label>
                                    <input type="text" name="RoleID" id="RoleID" class="form-control hidden">
                                    <input type="text" name="txtRolename" maxlength="150" id="txtRolename" class="form-control" data-parsley-trigger="change" required>
                                </div>

                            </div>


                            <div class="row">
                                <div class="form-group col-md-6">
                                    <label for="Url">Description *</label>
                                    <input type="text" name="txtDescription" maxlength="500" id="txtDescription" class="form-control" data-parsley-trigger="change" required>
                                </div>
                                <div class="form-group col-md-6">
                                    <label for="Email">Role Group</label>
                                    <select id="drpRoleGroup" class="form-control" name="drpRoleGroup">
                                        <option value="1">Admin</option>
                                        <option value="2">Sales Group</option>
                                        <option value="3">Sales Support</option>
                                        <option value="4">Others</option>
                                    </select>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <div class="table-responsive">
                                        <table class="table table-custom" id="tblroledetails">
                                            <thead>
                                                <tr>
                                                    <th style="display:none;"></th>
                                                    <th>Form Name</th>
                                                    <th>All</th>
                                                    <th>Add</th>
                                                    <th>Edit</th>
                                                    <th>Delete</th>
                                                    <th>Restore</th>
                                                    <th>View</th>
                                                </tr>
                                            </thead>
                                            <tbody id="tbl_body_roledetails" ></tbody>
                                        </table>
                                    </div>
                                </div>
                                </div>
                                <div class="tile-footer text-center bg-tr-black lter dvd dvd-top text-center  m-t-20">
                                    <!-- SUBMIT BUTTON -->
                                    <!-- Button used for submitting the record -->
                                    <button type="submit" class="btn btn-success" onclick="InsertRecords();" id="formSubmit" disabled>Submit</button>

                                </div>
                            </div>
                        </div>
                </section>
                <!--The user can have a option to restore-->
                <section class="tile" id="div_Restore" style="display:none">
                    <div id="restorediv">

                    </div>

                </section>
            </div>
        </div>
    </div>
</section>



